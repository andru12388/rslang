{"version":3,"file":"js/index.js","mappings":"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","sources":["webpack://webpack-demo/webpack/runtime/async module","webpack://webpack-demo/./src/index.ts","webpack://webpack-demo/./src/js/module/components/utilsGames.ts","webpack://webpack-demo/./src/js/view/createGamesPage.ts","webpack://webpack-demo/./src/js/controller/controller-games.ts","webpack://webpack-demo/./src/js/controller/controller.ts","webpack://webpack-demo/./src/js/controller/storage.ts","webpack://webpack-demo/./src/js/module/components/backHeader.ts","webpack://webpack-demo/./src/js/module/components/preloader.ts","webpack://webpack-demo/./src/js/module/components/statistic.ts","webpack://webpack-demo/./src/js/view/createCardsWords.ts","webpack://webpack-demo/./src/js/module/components/utils.ts","webpack://webpack-demo/./src/js/view/pagination.ts","webpack://webpack-demo/./src/js/module/requestsApi.ts","webpack://webpack-demo/./src/js/view/render.ts","webpack://webpack-demo/webpack/bootstrap","webpack://webpack-demo/webpack/runtime/define property getters","webpack://webpack-demo/webpack/runtime/hasOwnProperty shorthand","webpack://webpack-demo/webpack/startup"],"sourcesContent":["var webpackThen = typeof Symbol === \"function\" ? Symbol(\"webpack then\") : \"__webpack_then__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar completeQueue = (queue) => {\n\tif(queue) {\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar completeFunction = (fn) => (!--fn.r && fn());\nvar queueFunction = (queue, fn) => (queue ? queue.push(fn) : completeFunction(fn));\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackThen]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tcompleteQueue(queue);\n\t\t\t\tqueue = 0;\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tcompleteQueue(queue);\n\t\t\t\tqueue = 0;\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackThen] = (fn, reject) => (queueFunction(queue, fn), dep['catch'](reject));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackThen] = (fn) => (completeFunction(fn));\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue = hasAwait && [];\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar isEvaluating = true;\n\tvar nested = false;\n\tvar whenAll = (deps, onResolve, onReject) => {\n\t\tif (nested) return;\n\t\tnested = true;\n\t\tonResolve.r += deps.length;\n\t\tdeps.map((dep, i) => (dep[webpackThen](onResolve, onReject)));\n\t\tnested = false;\n\t};\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = () => (resolve(exports), completeQueue(queue), queue = 0);\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackThen] = (fn, rejectFn) => {\n\t\tif (isEvaluating) { return completeFunction(fn); }\n\t\tif (currentDeps) whenAll(currentDeps, fn, rejectFn);\n\t\tqueueFunction(queue, fn);\n\t\tpromise['catch'](rejectFn);\n\t};\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve, reject) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\twhenAll(currentDeps, fn, reject);\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => (err && reject(promise[webpackError] = err), outerResolve()));\n\tisEvaluating = false;\n};","import RenderView from './js/view/render';\r\nimport AppController from './js/controller/controller';\r\nimport PreloaderPage from './js/module/components/preloader';\r\nimport BackToHeader from './js/module/components/backHeader';\r\nimport GamesController from './js/controller/controller-games';\r\nimport './styles/main.sass';\r\nconst preloaderPage = new PreloaderPage();\r\npreloaderPage.preloaderApp();\r\nconst render = new RenderView();\r\nawait render.render();\r\nconst ui = new AppController();\r\nui.listenerAll();\r\nconst backToHeader = new BackToHeader();\r\nbackToHeader.upHeader();\r\nconst gamesUi = new GamesController();\r\ngamesUi.startAllListenerGames();\r\n","import RequestsApi from '../requestsApi';\r\nimport { storeGameRound, storeUserInfo, storage } from '../../controller/storage';\r\nconst api = new RequestsApi();\r\nclass UtilsGames {\r\n    constructor() {\r\n        this.audioLevelUp = new Audio();\r\n    }\r\n    async getGamesWordsFromDifficultyPage(selectGame) {\r\n        if (selectGame === 'game-sprint') {\r\n            storeGameRound.gameSprint = [...Object.values(await api.getDifficultWordsSignupUser(storeUserInfo))\r\n                    .map((item) => item.paginatedResults)\r\n                    .flat()];\r\n            storeGameRound.arrAnswerGameSprint = [...storeGameRound.gameSprint.map((item) => item.wordTranslate)];\r\n        }\r\n        if (selectGame === 'game-audio') {\r\n            storeGameRound.gameAudio = [...Object.values(await api.getDifficultWordsSignupUser(storeUserInfo))\r\n                    .map((item) => item.paginatedResults)\r\n                    .flat()];\r\n            storeGameRound.arrAnswerGameAudio = [...storeGameRound.gameAudio.map((item) => item.wordTranslate)];\r\n        }\r\n    }\r\n    // Sprint //\r\n    async getGamesWordsSprint(group, page) {\r\n        storeGameRound.gameSprint = [...Object.values(await api.getTextbookWords(group, page))];\r\n        let count = page;\r\n        while (storeGameRound.gameSprint.length < 80) {\r\n            count++;\r\n            if (count > 29)\r\n                count = 0;\r\n            const newGameSprint = [...Object.values(await api.getTextbookWords(group, count))];\r\n            storeGameRound.gameSprint = [...storeGameRound.gameSprint, ...newGameSprint];\r\n        }\r\n        storeGameRound.arrAnswerGameSprint = [...storeGameRound.gameSprint.map((item) => item.wordTranslate)];\r\n    }\r\n    async getGameSprintWords(group, page) {\r\n        storeGameRound.gameSprint = [...Object.values(await api.getTextbookWords(group, page))];\r\n        storeGameRound.arrAnswerGameSprint = [...storeGameRound.gameSprint.map((item) => item.wordTranslate)];\r\n    }\r\n    async getGamesWordsSprintTextbookSignupUser(storeUser, storeGeneral) {\r\n        const { groupWords: newGroupWords } = storeGeneral;\r\n        let { pageWords: newPageWords } = storeGeneral;\r\n        storeGameRound.gameSprint = [...Object.values(await api.getGameTextbookWordsSignupUser(storeUser, storeGeneral))\r\n                .map((item) => item.paginatedResults)\r\n                .flat()];\r\n        while (storeGameRound.gameSprint.length < 20 && newPageWords !== 0) {\r\n            newPageWords--;\r\n            const missingElements = 20 - storeGameRound.gameSprint.length;\r\n            const newStoreGeneral = { groupWords: newGroupWords, pageWords: newPageWords };\r\n            const newGameSprint = [...Object.values(await api.getGameTextbookWordsSignupUser(storeUser, newStoreGeneral))\r\n                    .map((item) => item.paginatedResults)\r\n                    .flat()];\r\n            if (newGameSprint.length > missingElements) {\r\n                storeGameRound.gameSprint = [...storeGameRound.gameSprint, ...newGameSprint.slice(0, missingElements)];\r\n            }\r\n            else {\r\n                storeGameRound.gameSprint = [...storeGameRound.gameSprint, ...newGameSprint];\r\n            }\r\n        }\r\n        storeGameRound.arrAnswerGameSprint = [...storeGameRound.gameSprint.map((item) => item.wordTranslate)];\r\n    }\r\n    getRandomArrAnswerSprint(word) {\r\n        const arrAllAnswer = storeGameRound.arrAnswerGameSprint\r\n            .filter((item) => item !== word)\r\n            .sort(() => Math.random() - Math.random()).slice(0, 1);\r\n        return [...arrAllAnswer, word].sort(() => Math.random() - 0.5);\r\n    }\r\n    factorPointsGameSprint({ countCorrectAnswerInRowSprint }) {\r\n        const qualityPoints = document.querySelector('.quality-points');\r\n        this.audioLevelUp.src = './assets/audio/level-up.mp3';\r\n        this.audioLevelUp.volume = 0.3;\r\n        const points = Number(qualityPoints.textContent);\r\n        switch (countCorrectAnswerInRowSprint) {\r\n            case 0:\r\n                qualityPoints.textContent = '10';\r\n                break;\r\n            case 4:\r\n                qualityPoints.textContent = `${points * 2}`;\r\n                this.audioLevelUp.play();\r\n                break;\r\n            case 8:\r\n                qualityPoints.textContent = `${points * 2}`;\r\n                this.audioLevelUp.play();\r\n                break;\r\n            case 12:\r\n                qualityPoints.textContent = `${points * 2}`;\r\n                this.audioLevelUp.play();\r\n                break;\r\n        }\r\n    }\r\n    plusPointsInTotalScoreSprint() {\r\n        const totalScores = document.querySelector('.total-score');\r\n        const qualityPoints = document.querySelector('.quality-points');\r\n        const total = Number(totalScores.textContent);\r\n        const points = Number(qualityPoints.textContent);\r\n        totalScores.textContent = `${total + points}`;\r\n    }\r\n    resetPaginationGameSprint() {\r\n        const paginationItem = document.querySelectorAll('.pagination-item');\r\n        if (storeGameRound.countPaginationSprint > 2) {\r\n            storeGameRound.countPaginationSprint = 0;\r\n            paginationItem.forEach((item) => item.style.background = 'none');\r\n            return false;\r\n        }\r\n        else {\r\n            paginationItem[storeGameRound.countPaginationSprint].style.background = 'green';\r\n            storeGameRound.countPaginationSprint++;\r\n        }\r\n    }\r\n    // Audiocall //\r\n    async getGamesWords(group, page) {\r\n        storeGameRound.gameAudio = [...Object.values(await api.getTextbookWords(group, page))];\r\n        storeGameRound.arrAnswerGameAudio = [...storeGameRound.gameAudio.map((item) => item.wordTranslate)];\r\n    }\r\n    async getGamesWordsTextbookSignupUser(storeUser, storeGeneral) {\r\n        const { groupWords: newGroupWords } = storeGeneral;\r\n        let { pageWords: newPageWords } = storeGeneral;\r\n        storeGameRound.gameAudio = [...Object.values(await api.getGameTextbookWordsSignupUser(storeUser, storeGeneral))\r\n                .map((item) => item.paginatedResults)\r\n                .flat()];\r\n        while (storeGameRound.gameAudio.length < 20 && newPageWords !== 0) {\r\n            newPageWords--;\r\n            const missingElements = 20 - storeGameRound.gameAudio.length;\r\n            const newStoreGeneral = { groupWords: newGroupWords, pageWords: newPageWords };\r\n            const newGameAudio = [...Object.values(await api.getGameTextbookWordsSignupUser(storeUser, newStoreGeneral))\r\n                    .map((item) => item.paginatedResults)\r\n                    .flat()];\r\n            if (newGameAudio.length > missingElements) {\r\n                storeGameRound.gameAudio = [...storeGameRound.gameAudio, ...newGameAudio.slice(0, missingElements)];\r\n            }\r\n            else {\r\n                storeGameRound.gameAudio = [...storeGameRound.gameAudio, ...newGameAudio];\r\n            }\r\n        }\r\n        storeGameRound.arrAnswerGameAudio = [...storeGameRound.gameAudio.map((item) => item.wordTranslate)];\r\n    }\r\n    getRandom(min = 0, max = 29) {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    }\r\n    getRandomArrAnswer(currentWord) {\r\n        const arrAllAnswer = storeGameRound.arrAnswerGameAudio\r\n            .filter((item) => item !== currentWord)\r\n            .sort(() => Math.random() - Math.random()).slice(0, 4);\r\n        return [...arrAllAnswer, currentWord].sort(() => Math.random() - 0.5);\r\n    }\r\n    selectCorrectId({ gameAudio, gameSprint, countGame }) {\r\n        let dataRound = null;\r\n        if (storage.currentPage === 'game-sprint' || storage.currentPage === 'game-sprint-from-textbook') {\r\n            dataRound = gameSprint[countGame];\r\n        }\r\n        else {\r\n            dataRound = gameAudio[countGame];\r\n        }\r\n        let correctIdWord = '';\r\n        if (dataRound._id === undefined) {\r\n            correctIdWord = dataRound.id;\r\n        }\r\n        else {\r\n            correctIdWord = dataRound._id;\r\n        }\r\n        return correctIdWord;\r\n    }\r\n    async selectRequestGameAudio() {\r\n        if (storage.currentPage === 'difficult-words') {\r\n            await this.getGamesWordsFromDifficultyPage('game-audio');\r\n        }\r\n        else {\r\n            if (storage.isSignupUser) {\r\n                await this.getGamesWordsTextbookSignupUser(storeUserInfo, storage);\r\n            }\r\n            else {\r\n                await this.getGamesWords(storage.groupWords, storage.pageWords);\r\n            }\r\n        }\r\n    }\r\n    async selectRequestGameSprint() {\r\n        if (storage.currentPage === 'difficult-words') {\r\n            await this.getGamesWordsFromDifficultyPage('game-sprint');\r\n        }\r\n        else {\r\n            if (storage.isSignupUser) {\r\n                await this.getGamesWordsSprintTextbookSignupUser(storeUserInfo, storage);\r\n            }\r\n            else {\r\n                await this.getGameSprintWords(storage.groupWords, storage.pageWords);\r\n            }\r\n        }\r\n    }\r\n    async saveInDataBaseResultCorrectGames() {\r\n        const wordID = this.selectCorrectId(storeGameRound);\r\n        if (storage.isSignupUser) {\r\n            try {\r\n                const response = await this.saveResponseGameWordInStore(wordID);\r\n                await this.actionOnTrueRequestCorrectResult(response, wordID);\r\n            }\r\n            catch (error) {\r\n                await this.actionOnFalseRequestCorrectResult(wordID);\r\n            }\r\n        }\r\n    }\r\n    async saveInDataBaseResultWrongGames() {\r\n        const wordID = this.selectCorrectId(storeGameRound);\r\n        if (storage.isSignupUser) {\r\n            try {\r\n                const response = await this.saveResponseGameWordInStore(wordID);\r\n                await this.actionOnTrueRequestWrongResult(response, wordID);\r\n            }\r\n            catch (error) {\r\n                await this.actionOnFalseRequestWrongResult(wordID);\r\n            }\r\n        }\r\n    }\r\n    createResultTrueAnswer({ gameAudio, gameSprint, countGame, trueAnswerGame }) {\r\n        const blockCorrect = document.querySelector('.block-correct');\r\n        let dataRound = null;\r\n        if (storage.currentPage === 'game-sprint' || storage.currentPage === 'game-sprint-from-textbook') {\r\n            dataRound = gameSprint[countGame];\r\n        }\r\n        else {\r\n            dataRound = gameAudio[countGame];\r\n        }\r\n        const dataAtrAudio = dataRound.audio;\r\n        const correctAnswer = trueAnswerGame[this.selectCorrectId(storeGameRound)];\r\n        const div = document.createElement('div');\r\n        div.classList.add('answer-correct-item');\r\n        const span = document.createElement('span');\r\n        span.classList.add('icon-audio-popup');\r\n        span.setAttribute('data-source', `${dataAtrAudio}`);\r\n        div.append(span);\r\n        const span2 = document.createElement('span');\r\n        span2.classList.add('translate-word-correct');\r\n        span2.textContent = `${correctAnswer}`;\r\n        div.append(span2);\r\n        blockCorrect.append(div);\r\n    }\r\n    createResultFalseAnswer({ gameAudio, gameSprint, countGame, falseAnswerGame }) {\r\n        const blockWrong = document.querySelector('.block-wrong');\r\n        let dataRound = null;\r\n        if (storage.currentPage === 'game-sprint' || storage.currentPage === 'game-sprint-from-textbook') {\r\n            dataRound = gameSprint[countGame];\r\n        }\r\n        else {\r\n            dataRound = gameAudio[countGame];\r\n        }\r\n        const dataAtrAudio = dataRound.audio;\r\n        const wrongAnswer = falseAnswerGame[this.selectCorrectId(storeGameRound)];\r\n        const div = document.createElement('div');\r\n        div.classList.add('answer-wrong-item');\r\n        const span = document.createElement('span');\r\n        span.classList.add('icon-audio-popup');\r\n        span.setAttribute('data-source', `${dataAtrAudio}`);\r\n        div.append(span);\r\n        const span2 = document.createElement('span');\r\n        span2.classList.add('translate-word-wrong');\r\n        span2.textContent = `${wrongAnswer}`;\r\n        div.append(span2);\r\n        blockWrong.append(div);\r\n    }\r\n    async saveResponseGameWordInStore(wordId) {\r\n        const response = await api.getGameWord(storeUserInfo, wordId);\r\n        return {\r\n            gamesAnswer: response.optional.gamesAnswer,\r\n            difficultyWord: response.difficulty,\r\n        };\r\n    }\r\n    async actionOnTrueRequestWrongResult(responseData, wordId) {\r\n        let { difficultyWord } = responseData;\r\n        const { gamesAnswer } = responseData;\r\n        if (difficultyWord === 'easy') {\r\n            difficultyWord = 'normal';\r\n        }\r\n        gamesAnswer.wrong++;\r\n        await api.updateGameWords(storeUserInfo, gamesAnswer, difficultyWord, wordId);\r\n    }\r\n    async actionOnFalseRequestWrongResult(wordId) {\r\n        const gamesAnswer = { correct: 0, wrong: 0 };\r\n        const difficultyWord = 'normal';\r\n        gamesAnswer.wrong++;\r\n        await api.createGameWords(storeUserInfo, gamesAnswer, difficultyWord, wordId);\r\n    }\r\n    async actionOnTrueRequestCorrectResult(responseData, wordId) {\r\n        let { difficultyWord } = responseData;\r\n        const { gamesAnswer } = responseData;\r\n        gamesAnswer.correct++;\r\n        const differenceAnswer = gamesAnswer.correct - gamesAnswer.wrong;\r\n        if (differenceAnswer >= 3 && difficultyWord !== 'hard') {\r\n            difficultyWord = 'easy';\r\n            storeGameRound.learnWordsInGames++;\r\n        }\r\n        if (differenceAnswer >= 5 && difficultyWord === 'hard') {\r\n            difficultyWord = 'easy';\r\n            storeGameRound.learnWordsInGames++;\r\n        }\r\n        await api.updateGameWords(storeUserInfo, gamesAnswer, difficultyWord, wordId);\r\n    }\r\n    async actionOnFalseRequestCorrectResult(wordId) {\r\n        const gamesAnswer = { correct: 0, wrong: 0 };\r\n        const difficultyWord = 'normal';\r\n        gamesAnswer.correct++;\r\n        await api.createGameWords(storeUserInfo, gamesAnswer, difficultyWord, wordId);\r\n    }\r\n}\r\nexport default UtilsGames;\r\n","class CreateGamePage {\r\n    constructor(word, wordTranslate, audio, image) {\r\n        this.image = image;\r\n        this.word = word;\r\n        this.wordTranslate = wordTranslate;\r\n        this.audio = audio;\r\n        this.main = document.querySelector('.main');\r\n    }\r\n    createRoundGameAudio() {\r\n        this.main.innerHTML = '';\r\n        const page = `\r\n      <div class=\"wrapper-games\">\r\n        <div class=\"btn-nav-round\">\r\n          <div class=\"game-audio-close\"></div>\r\n          <div class=\"game-audio-fullscreen\"></div>\r\n        </div>\r\n        <div class=\"game-audio-call\">\r\n          <div class=\"box-correct-answer\"></div>\r\n          <button class=\"icon-mute\" data-source=\"${this.audio}\"></button>\r\n          <div class=\"block-answer-game\"></div>\r\n          <div class=\"block-btn-game-audio\">\r\n            <button class=\"button-game btn-not-know\">Не знаю</button>\r\n            <button class=\"button-game btn-next active-hidden\">Дальше</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n        this.main.insertAdjacentHTML('beforeend', page);\r\n    }\r\n    createCorrectAnswer() {\r\n        const boxCorrectAnswer = document.querySelector('.box-correct-answer');\r\n        boxCorrectAnswer.innerHTML = '';\r\n        const blockAnswer = `\r\n      <div class=\"card-words\">\r\n        <img class=\"card-words-img\" src=\"https://rslang-bak.herokuapp.com/${this.image}\" alt=\"${this.wordTranslate}\"></img>\r\n        <p class=\"word\">${this.word}</p>\r\n        <div class=\"block-words\">\r\n          <p class=\"word-translate\">${this.wordTranslate}</p>\r\n          <button class=\"icon-audio-game\" data-source=\"${this.audio}\"></button>\r\n        </div>\r\n      </div>\r\n    `;\r\n        boxCorrectAnswer.insertAdjacentHTML('beforeend', blockAnswer);\r\n    }\r\n    startGameSprint() {\r\n        this.main.innerHTML = '';\r\n        const page = `\r\n      <div class=\"wrapper-games\">\r\n        <div class=\"btn-nav-round\">\r\n          <div class=\"game-sprint-close game-audio-close\"></div>\r\n          <div class=\"game-audio-fullscreen\"></div>\r\n        </div>\r\n        <div class=\"game-sprint\">\r\n          <div class=\"timer-game\"><span class=\"time\">60</span></div>\r\n          <div class=\"block-score\">\r\n            <div class=\"point-word\"><b>+</b> <span class=\"quality-points\">10</span> очков за слово</div>\r\n            <div class=\"total-point\">Итого: <span class=\"total-score\">0</span></div>\r\n          </div>\r\n          <div class=\"card-game-sprint\">\r\n            <div class=\"pagination-game-sprint\">\r\n              <div class=\"pagination-item\"></div>\r\n              <div class=\"pagination-item\"></div>\r\n              <div class=\"pagination-item\"></div>\r\n            </div>\r\n            <div class=\"question-box\">\r\n              <p class=\"word-game\">${this.word}</p>\r\n              <p class=\"word-translate-game\">${this.wordTranslate}</p>\r\n            </div>\r\n            <div class=\"block-btn-game-sprint\">\r\n              <button class=\"button-game-sprint btn-wrong\">Неверно</button>\r\n              <button class=\"button-game-sprint btn-correct\">Верно</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n        this.main.insertAdjacentHTML('beforeend', page);\r\n    }\r\n    createRoundGameSprint() {\r\n        const questionBox = document.querySelector('.question-box');\r\n        questionBox.innerHTML = '';\r\n        const blockQuestion = `\r\n      <p class=\"word-game\">${this.word}</p>\r\n      <p class=\"word-translate-game\">${this.wordTranslate}</p>\r\n    `;\r\n        questionBox.insertAdjacentHTML('beforeend', blockQuestion);\r\n    }\r\n}\r\nexport default CreateGamePage;\r\n","import RenderView from '../view/render';\r\nimport { storage, storeGameRound } from './storage';\r\nimport Utils from '../module/components/utils';\r\nimport UtilsGames from '../module/components/utilsGames';\r\nimport StatisticGames from '../module/components/statistic';\r\nimport CreateGamePage from '../view/createGamesPage';\r\nconst render = new RenderView();\r\nconst utils = new Utils();\r\nconst utilsGames = new UtilsGames();\r\nconst statistic = new StatisticGames();\r\nclass GamesController {\r\n    constructor() {\r\n        this.linkGameAudio = document.querySelector('#link-game-audio');\r\n        this.linkGameSprint = document.querySelector('#link-game-sprint');\r\n        this.main = document.querySelector('.main');\r\n        this.footer = document.querySelector('.footer');\r\n        this.wrapper = document.querySelector('.wrapper');\r\n        this.menuBurg = document.querySelector('.menu-btn');\r\n        this.logoLinkHome = document.querySelector('.logo');\r\n        this.numberWrong = document.querySelector('.number-wrong');\r\n        this.numberCorrect = document.querySelector('.number-correct');\r\n        this.buttonExitPopupGame = document.querySelector('.button-exit');\r\n        this.btnExitPopupGameFromTextbook = document.querySelector('.button-exit-from-textbook');\r\n        this.buttonRepeatPopupGame = document.querySelector('.button-repeat');\r\n        this.btnRepeatPopupGameFromTextbook = document.querySelector('.button-repeat-from-textbook');\r\n        this.popupResultGame = document.querySelector('.popup-result-game');\r\n        this.popupBlockCorrect = document.querySelector('.block-correct');\r\n        this.popupBlockWrong = document.querySelector('.block-wrong');\r\n        this.linkTextbook = document.querySelector('#link-textbook');\r\n        this.header = document.querySelector('.header');\r\n        this.resultGameSprint = document.querySelector('.result-game-sprint');\r\n        this.audioCorrect = new Audio();\r\n        this.audioWrong = new Audio();\r\n        this.interval = null;\r\n    }\r\n    async cancelRoundGameSprint() {\r\n        const totalScores = document.querySelector('.total-score');\r\n        const total = totalScores.textContent;\r\n        this.resultGameSprint.textContent = `- ${total} очков`;\r\n        clearInterval(this.interval);\r\n        await this.cancelAllRoundsGame(storeGameRound);\r\n        this.playAudioResultGameAudio();\r\n        this.exitPopupGame();\r\n        this.exitPopupGameFromTextbook();\r\n        this.repeatPopupGameAudio();\r\n        this.repeatPopupGameFromTextbook();\r\n    }\r\n    timer() {\r\n        const time = document.querySelector('.time');\r\n        let timeRound = 59;\r\n        this.interval = setInterval(async () => {\r\n            time.textContent = `${timeRound}`;\r\n            timeRound--;\r\n            if (timeRound === -1) {\r\n                clearInterval(this.interval);\r\n                await this.cancelRoundGameSprint();\r\n            }\r\n        }, 1000);\r\n    }\r\n    startRoundGameSprint({ currentWordTranslate, currentWord }) {\r\n        storeGameRound.randomWord = utilsGames.getRandomArrAnswerSprint(currentWordTranslate)[utilsGames.getRandom(0, 1)];\r\n        const createGamePage = new CreateGamePage(currentWord, storeGameRound.randomWord);\r\n        createGamePage.startGameSprint();\r\n        this.timer();\r\n        this.selectAnswerGameSprint();\r\n        this.exitRoundGame();\r\n    }\r\n    async actionOnWrongAnswerSprint({ currentWordTranslate, currentWord }) {\r\n        const paginationItem = document.querySelectorAll('.pagination-item');\r\n        storeGameRound.falseAnswerGame[utilsGames.selectCorrectId(storeGameRound)] = (`${currentWord} - ${currentWordTranslate}`);\r\n        utilsGames.createResultFalseAnswer(storeGameRound);\r\n        this.installPathsAndVolumeAudio();\r\n        this.audioWrong.play();\r\n        storeGameRound.longSeriesAnswer.push(storeGameRound.countCorrectAnswerInRowSprint);\r\n        storeGameRound.countCorrectAnswerInRowSprint = 0;\r\n        storeGameRound.countPaginationSprint = 0;\r\n        utilsGames.factorPointsGameSprint(storeGameRound);\r\n        paginationItem.forEach((item) => item.style.background = 'none');\r\n        await utilsGames.saveInDataBaseResultWrongGames();\r\n        storeGameRound.countGame++;\r\n        if (storeGameRound.countGame > storeGameRound.gameSprint.length - 1) {\r\n            await this.cancelRoundGameSprint();\r\n        }\r\n        else {\r\n            this.saveDataRoundInStoreGameRound();\r\n            storeGameRound.randomWord = utilsGames.getRandomArrAnswerSprint(storeGameRound.currentWordTranslate)[utilsGames.getRandom(0, 1)];\r\n            const createGamePage = new CreateGamePage(storeGameRound.currentWord, storeGameRound.randomWord);\r\n            createGamePage.createRoundGameSprint();\r\n        }\r\n    }\r\n    async actionOnCorrectAnswerSprint({ currentWordTranslate, currentWord }) {\r\n        storeGameRound.trueAnswerGame[utilsGames.selectCorrectId(storeGameRound)] = (`${currentWord} - ${currentWordTranslate}`);\r\n        utilsGames.createResultTrueAnswer(storeGameRound);\r\n        this.installPathsAndVolumeAudio();\r\n        this.audioCorrect.play();\r\n        storeGameRound.countCorrectAnswerInRowSprint++;\r\n        utilsGames.factorPointsGameSprint(storeGameRound);\r\n        utilsGames.plusPointsInTotalScoreSprint();\r\n        utilsGames.resetPaginationGameSprint();\r\n        await utilsGames.saveInDataBaseResultCorrectGames();\r\n        storeGameRound.countGame++;\r\n        if (storeGameRound.countGame > storeGameRound.gameSprint.length - 1) {\r\n            await this.cancelRoundGameSprint();\r\n        }\r\n        else {\r\n            this.saveDataRoundInStoreGameRound();\r\n            storeGameRound.randomWord = utilsGames.getRandomArrAnswerSprint(storeGameRound.currentWordTranslate)[utilsGames.getRandom(0, 1)];\r\n            const createGamePage = new CreateGamePage(storeGameRound.currentWord, storeGameRound.randomWord);\r\n            createGamePage.createRoundGameSprint();\r\n        }\r\n    }\r\n    selectAnswerGameSprint() {\r\n        const blockBtnGameSprint = document.querySelector('.block-btn-game-sprint');\r\n        blockBtnGameSprint.addEventListener('click', async (event) => {\r\n            const element = event.target;\r\n            if (element.classList.contains('btn-wrong')) {\r\n                if (storeGameRound.currentWordTranslate === storeGameRound.randomWord) {\r\n                    await this.actionOnWrongAnswerSprint(storeGameRound);\r\n                }\r\n                else {\r\n                    await this.actionOnCorrectAnswerSprint(storeGameRound);\r\n                }\r\n            }\r\n            if (element.classList.contains('btn-correct')) {\r\n                if (storeGameRound.currentWordTranslate === storeGameRound.randomWord) {\r\n                    await this.actionOnCorrectAnswerSprint(storeGameRound);\r\n                }\r\n                else {\r\n                    await this.actionOnWrongAnswerSprint(storeGameRound);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    showGameSprint() {\r\n        this.main.innerHTML = '';\r\n        this.main.insertAdjacentHTML('beforeend', render.renderGameSprint());\r\n        this.wrapper.style.backgroundImage = 'url(\"./assets/img/bg-game-sprint.webp\")';\r\n        const popupGameLevel = document.querySelector('.popup-game-level');\r\n        popupGameLevel.classList.remove('active-hidden');\r\n        this.footer.classList.add('active-hidden');\r\n        this.selectionLevelGame();\r\n        this.clickStartButton();\r\n        this.exitGames();\r\n    }\r\n    showGameSprintFromTextbook() {\r\n        this.main.innerHTML = '';\r\n        this.main.insertAdjacentHTML('beforeend', render.renderGameSprintFromTextbook());\r\n        this.wrapper.style.backgroundImage = 'url(\"./assets/img/bg-game-sprint.webp\")';\r\n        const popupGameLevel = document.querySelector('.popup-game-level');\r\n        popupGameLevel.classList.remove('active-hidden');\r\n        this.footer.classList.add('active-hidden');\r\n        this.clickStartButton();\r\n        this.exitGames();\r\n    }\r\n    goToGameSprint() {\r\n        this.linkGameSprint.addEventListener('click', () => {\r\n            storage.currentPage = 'game-sprint';\r\n            localStorage.setItem('general-info', JSON.stringify(storage));\r\n            this.hideShowToggleBtnPopupGame();\r\n            this.showGameSprint();\r\n            this.menuBurg.click();\r\n        });\r\n    }\r\n    goToGameSprintFromPageTextbook() {\r\n        const btnGameSprint = document.querySelector('.game-card-sprint');\r\n        btnGameSprint.addEventListener('click', async () => {\r\n            await utilsGames.selectRequestGameSprint();\r\n            storage.currentPage = 'game-sprint-from-textbook';\r\n            localStorage.setItem('general-info', JSON.stringify(storage));\r\n            this.hideShowToggleBtnPopupGame();\r\n            this.footer.style.display = 'none';\r\n            this.showGameSprintFromTextbook();\r\n        });\r\n    }\r\n    // AudioGame //\r\n    installPathsAndVolumeAudio() {\r\n        this.audioCorrect.src = './assets/audio/correct-answer.mp3';\r\n        this.audioWrong.src = './assets/audio/wrong-answer.mp3';\r\n        this.audioCorrect.volume = 0.3;\r\n        this.audioWrong.volume = 0.3;\r\n    }\r\n    showGameAudio() {\r\n        this.main.innerHTML = '';\r\n        this.main.insertAdjacentHTML('beforeend', render.renderGameAudioCall());\r\n        this.wrapper.style.backgroundImage = 'url(\"./assets/img/bg-game-audio.webp\")';\r\n        const popupGameLevel = document.querySelector('.popup-game-level');\r\n        popupGameLevel.classList.remove('active-hidden');\r\n        this.footer.classList.add('active-hidden');\r\n        this.selectionLevelGame();\r\n        this.clickStartButton();\r\n        this.exitGames();\r\n    }\r\n    showGameAudioFromTextbook() {\r\n        this.main.innerHTML = '';\r\n        this.main.insertAdjacentHTML('beforeend', render.renderGameAudioCallFromTextbook());\r\n        this.wrapper.style.backgroundImage = 'url(\"./assets/img/bg-game-audio.webp\")';\r\n        const popupGameLevel = document.querySelector('.popup-game-level');\r\n        popupGameLevel.classList.remove('active-hidden');\r\n        this.footer.classList.add('active-hidden');\r\n        this.clickStartButton();\r\n        this.exitGames();\r\n    }\r\n    goToGameAudio() {\r\n        this.linkGameAudio.addEventListener('click', () => {\r\n            storage.currentPage = 'game-audio';\r\n            localStorage.setItem('general-info', JSON.stringify(storage));\r\n            this.hideShowToggleBtnPopupGame();\r\n            this.showGameAudio();\r\n            this.menuBurg.click();\r\n        });\r\n    }\r\n    goToGameAudioFromPageTextbook() {\r\n        const btnGameAudio = document.querySelector('.game-card-audio-call');\r\n        btnGameAudio.addEventListener('click', async () => {\r\n            await utilsGames.selectRequestGameAudio();\r\n            storage.currentPage = 'game-audio-from-textbook';\r\n            localStorage.setItem('general-info', JSON.stringify(storage));\r\n            this.hideShowToggleBtnPopupGame();\r\n            this.footer.style.display = 'none';\r\n            this.showGameAudioFromTextbook();\r\n        });\r\n    }\r\n    hideShowToggleBtnPopupGame() {\r\n        if (storage.currentPage === 'game-audio' || storage.currentPage === 'game-sprint') {\r\n            this.btnExitPopupGameFromTextbook.classList.add('active-hidden');\r\n            this.btnRepeatPopupGameFromTextbook.classList.add('active-hidden');\r\n            this.buttonRepeatPopupGame.classList.remove('active-hidden');\r\n            this.buttonExitPopupGame.classList.remove('active-hidden');\r\n        }\r\n        else {\r\n            this.btnExitPopupGameFromTextbook.classList.remove('active-hidden');\r\n            this.btnRepeatPopupGameFromTextbook.classList.remove('active-hidden');\r\n            this.buttonRepeatPopupGame.classList.add('active-hidden');\r\n            this.buttonExitPopupGame.classList.add('active-hidden');\r\n        }\r\n    }\r\n    saveDataRoundInStoreGameRound() {\r\n        if (storage.currentPage === 'game-sprint' || storage.currentPage === 'game-sprint-from-textbook') {\r\n            const dataRound = storeGameRound.gameSprint[storeGameRound.countGame];\r\n            storeGameRound.currentWord = dataRound.word;\r\n            storeGameRound.currentWordTranslate = dataRound.wordTranslate;\r\n        }\r\n        else {\r\n            const dataRound = storeGameRound.gameAudio[storeGameRound.countGame];\r\n            storeGameRound.currentWord = dataRound.word;\r\n            storeGameRound.currentWordTranslate = dataRound.wordTranslate;\r\n        }\r\n    }\r\n    createBtnAnswer({ currentWordTranslate }) {\r\n        const arrAnswer = utilsGames.getRandomArrAnswer(currentWordTranslate);\r\n        const blockAnswerGame = document.querySelector('.block-answer-game');\r\n        arrAnswer.forEach((item, index) => {\r\n            const button = document.createElement('button');\r\n            button.classList.add('button-game', 'btn-answer-item', `answer-${index + 1}`);\r\n            button.textContent = `${index + 1} ${item}`;\r\n            blockAnswerGame.append(button);\r\n        });\r\n    }\r\n    startRoundGameAudio({ gameAudio, countGame }) {\r\n        const dataRound = gameAudio[countGame];\r\n        const createGamePage = new CreateGamePage(dataRound.word, dataRound.wordTranslate, dataRound.audio, dataRound.image);\r\n        createGamePage.createRoundGameAudio();\r\n        this.createBtnAnswer(storeGameRound);\r\n        this.playAudioGameAudio();\r\n        const iconMute = document.querySelector('.icon-mute');\r\n        iconMute.click();\r\n        this.exitRoundGame();\r\n        this.answerBtnNotKnow();\r\n        this.selectAnswer(storeGameRound);\r\n    }\r\n    clickStartButton() {\r\n        const btnStart = document.querySelector('.btn-start');\r\n        btnStart.addEventListener('click', () => {\r\n            this.saveDataRoundInStoreGameRound();\r\n            if (storage.currentPage === 'game-sprint' || storage.currentPage === 'game-sprint-from-textbook') {\r\n                this.startRoundGameSprint(storeGameRound);\r\n            }\r\n            else {\r\n                this.startRoundGameAudio(storeGameRound);\r\n            }\r\n        });\r\n    }\r\n    checkDisabledAnswer({ currentWordTranslate }) {\r\n        const btnAnswerItem = document.querySelectorAll('.btn-answer-item');\r\n        btnAnswerItem.forEach((item) => {\r\n            item.disabled = true;\r\n            if (item.textContent.slice(2) === currentWordTranslate) {\r\n                item.style.background = 'green';\r\n            }\r\n        });\r\n    }\r\n    hideShowBtnWhenAnswer() {\r\n        const btnNotKnow = document.querySelector('.btn-not-know');\r\n        const iconMute = document.querySelector('.icon-mute');\r\n        const btnNext = document.querySelector('.btn-next');\r\n        iconMute.classList.add('active-hidden');\r\n        btnNotKnow.classList.add('active-hidden');\r\n        btnNext.classList.remove('active-hidden');\r\n    }\r\n    answerBtnNotKnow() {\r\n        const btnNotKnow = document.querySelector('.btn-not-know');\r\n        btnNotKnow.addEventListener('click', () => {\r\n            this.actionOnWrongAnswer(storeGameRound);\r\n        });\r\n    }\r\n    async cancelAllRoundsGame({ falseAnswerGame, trueAnswerGame }) {\r\n        this.popupResultGame.classList.remove('active-hidden');\r\n        this.main.innerHTML = '';\r\n        this.numberWrong.textContent = String(Object.keys(falseAnswerGame).length);\r\n        this.numberCorrect.textContent = String(Object.keys(trueAnswerGame).length);\r\n        storeGameRound.longSeriesAnswer.push(storeGameRound.countCorrectAnswerInRowSprint);\r\n        storeGameRound.countGame = 0;\r\n        storeGameRound.countCorrectAnswerInRowSprint = 0;\r\n        storeGameRound.countPaginationSprint = 0;\r\n        if (storage.isSignupUser) {\r\n            await statistic.saveStatisticInDataBase();\r\n        }\r\n        storeGameRound.longSeriesAnswer.length = 0;\r\n        storeGameRound.learnWordsInGames = 0;\r\n        for (const item in falseAnswerGame)\r\n            delete falseAnswerGame[item];\r\n        for (const item in trueAnswerGame)\r\n            delete trueAnswerGame[item];\r\n    }\r\n    pressBtnNext() {\r\n        const btnNext = document.querySelector('.btn-next');\r\n        btnNext.addEventListener('click', async () => {\r\n            storeGameRound.countGame++;\r\n            if (storeGameRound.countGame > storeGameRound.gameAudio.length - 1) {\r\n                await this.cancelAllRoundsGame(storeGameRound);\r\n                this.playAudioResultGameAudio();\r\n                this.exitPopupGame();\r\n                this.exitPopupGameFromTextbook();\r\n                this.repeatPopupGameAudio();\r\n                this.repeatPopupGameFromTextbook();\r\n            }\r\n            else {\r\n                this.saveDataRoundInStoreGameRound();\r\n                this.startRoundGameAudio(storeGameRound);\r\n            }\r\n        });\r\n    }\r\n    async actionOnCorrectAnswer({ gameAudio, countGame, currentWordTranslate, currentWord }) {\r\n        const btnAnswerItem = document.querySelectorAll('.btn-answer-item');\r\n        const dataRound = gameAudio[countGame];\r\n        const wordID = utilsGames.selectCorrectId(storeGameRound);\r\n        this.hideShowBtnWhenAnswer();\r\n        const createGamePage = new CreateGamePage(dataRound.word, dataRound.wordTranslate, dataRound.audio, dataRound.image);\r\n        createGamePage.createCorrectAnswer();\r\n        btnAnswerItem.forEach((item) => item.disabled = true);\r\n        storeGameRound.trueAnswerGame[wordID] = (`${currentWord} - ${currentWordTranslate}`);\r\n        storeGameRound.countCorrectAnswerInRowSprint++;\r\n        utilsGames.createResultTrueAnswer(storeGameRound);\r\n        this.playAudioAnswerGameAudio();\r\n        this.pressBtnNext();\r\n        await utilsGames.saveInDataBaseResultCorrectGames();\r\n    }\r\n    async actionOnWrongAnswer({ gameAudio, countGame, currentWordTranslate, currentWord }) {\r\n        const dataRound = gameAudio[countGame];\r\n        const wordID = utilsGames.selectCorrectId(storeGameRound);\r\n        this.hideShowBtnWhenAnswer();\r\n        const createGamePage = new CreateGamePage(dataRound.word, dataRound.wordTranslate, dataRound.audio, dataRound.image);\r\n        createGamePage.createCorrectAnswer();\r\n        this.checkDisabledAnswer(storeGameRound);\r\n        storeGameRound.falseAnswerGame[wordID] = (`${currentWord} - ${currentWordTranslate}`);\r\n        storeGameRound.longSeriesAnswer.push(storeGameRound.countCorrectAnswerInRowSprint);\r\n        storeGameRound.countCorrectAnswerInRowSprint = 0;\r\n        utilsGames.createResultFalseAnswer(storeGameRound);\r\n        this.playAudioAnswerGameAudio();\r\n        this.pressBtnNext();\r\n        await utilsGames.saveInDataBaseResultWrongGames();\r\n    }\r\n    selectAnswer({ currentWordTranslate }) {\r\n        const blockAnswerGame = document.querySelector('.block-answer-game');\r\n        blockAnswerGame.addEventListener('click', async (event) => {\r\n            const element = event.target;\r\n            if (!element.classList.contains('btn-answer-item'))\r\n                return false;\r\n            const answer = element.textContent.slice(2);\r\n            if (answer === currentWordTranslate) {\r\n                element.style.background = 'green';\r\n                this.installPathsAndVolumeAudio();\r\n                this.audioCorrect.play();\r\n                await this.actionOnCorrectAnswer(storeGameRound);\r\n            }\r\n            else {\r\n                element.style.background = 'red';\r\n                this.installPathsAndVolumeAudio();\r\n                this.audioWrong.play();\r\n                await this.actionOnWrongAnswer(storeGameRound);\r\n            }\r\n        });\r\n    }\r\n    transitionTextbook() {\r\n        this.linkTextbook.addEventListener('click', async () => {\r\n            this.goToGameAudioFromPageTextbook();\r\n            this.goToGameSprintFromPageTextbook();\r\n        });\r\n    }\r\n    exitGames() {\r\n        const btnCancel = document.querySelector('.btn-cancel');\r\n        btnCancel.addEventListener('click', () => {\r\n            this.footer.style.display = '';\r\n            this.logoLinkHome.click();\r\n        });\r\n    }\r\n    exitRoundGame() {\r\n        const btnExit = document.querySelector('.game-audio-close');\r\n        btnExit.addEventListener('click', () => {\r\n            this.popupBlockCorrect.innerHTML = '';\r\n            this.popupBlockWrong.innerHTML = '';\r\n            storeGameRound.countGame = 0;\r\n            storeGameRound.countCorrectAnswerInRowSprint = 0;\r\n            storeGameRound.countPaginationSprint = 0;\r\n            storeGameRound.longSeriesAnswer.length = 0;\r\n            storeGameRound.learnWordsInGames = 0;\r\n            clearInterval(this.interval);\r\n            for (const item in storeGameRound.falseAnswerGame)\r\n                delete storeGameRound.falseAnswerGame[item];\r\n            for (const item in storeGameRound.trueAnswerGame)\r\n                delete storeGameRound.trueAnswerGame[item];\r\n            this.footer.style.display = '';\r\n            this.logoLinkHome.click();\r\n        });\r\n    }\r\n    fullscreenRoundGame() {\r\n        document.addEventListener('click', (event) => {\r\n            const element = event.target;\r\n            if (!element.classList.contains('game-audio-fullscreen'))\r\n                return false;\r\n            if (document.fullscreenElement) {\r\n                document.exitFullscreen();\r\n                this.header.style.display = '';\r\n            }\r\n            else {\r\n                document.documentElement.requestFullscreen();\r\n                this.header.style.display = 'none';\r\n            }\r\n        });\r\n    }\r\n    exitPopupGame() {\r\n        this.buttonExitPopupGame.addEventListener('click', () => {\r\n            this.popupResultGame.classList.add('active-hidden');\r\n            this.popupBlockCorrect.innerHTML = '';\r\n            this.popupBlockWrong.innerHTML = '';\r\n            this.resultGameSprint.textContent = '';\r\n            this.footer.style.display = '';\r\n            this.logoLinkHome.click();\r\n        });\r\n    }\r\n    exitPopupGameFromTextbook() {\r\n        this.btnExitPopupGameFromTextbook.addEventListener('click', () => {\r\n            this.buttonExitPopupGame.click();\r\n        });\r\n    }\r\n    repeatPopupGameAudio() {\r\n        this.buttonRepeatPopupGame.addEventListener('click', () => {\r\n            this.popupResultGame.classList.add('active-hidden');\r\n            this.popupBlockCorrect.innerHTML = '';\r\n            this.popupBlockWrong.innerHTML = '';\r\n            this.resultGameSprint.textContent = '';\r\n            if (storage.currentPage === 'game-sprint' || storage.currentPage === 'game-sprint-from-textbook') {\r\n                this.showGameSprint();\r\n            }\r\n            else {\r\n                this.showGameAudio();\r\n            }\r\n        });\r\n    }\r\n    repeatPopupGameFromTextbook() {\r\n        this.btnRepeatPopupGameFromTextbook.addEventListener('click', async () => {\r\n            this.popupResultGame.classList.add('active-hidden');\r\n            this.popupBlockCorrect.innerHTML = '';\r\n            this.popupBlockWrong.innerHTML = '';\r\n            this.resultGameSprint.textContent = '';\r\n            if (storage.currentPage === 'game-sprint' || storage.currentPage === 'game-sprint-from-textbook') {\r\n                this.showGameSprintFromTextbook();\r\n                await utilsGames.selectRequestGameSprint();\r\n            }\r\n            else {\r\n                this.showGameAudioFromTextbook();\r\n                await utilsGames.selectRequestGameAudio();\r\n            }\r\n        });\r\n    }\r\n    currentLevelGame() {\r\n        const levelGame = document.querySelectorAll('.levels-game-item');\r\n        levelGame.forEach((item) => {\r\n            if (item.dataset.group === String(storage.levelGame)) {\r\n                item.classList.add('active');\r\n            }\r\n            else {\r\n                item.classList.remove('active');\r\n            }\r\n        });\r\n    }\r\n    selectionLevelGame() {\r\n        const blockLevelsGame = document.querySelector('.levels-game');\r\n        const btnStart = document.querySelector('.btn-start');\r\n        blockLevelsGame.addEventListener('click', async (event) => {\r\n            const element = event.target;\r\n            if (!element.classList.contains('levels-game-item'))\r\n                return false;\r\n            storage.levelGame = Number(element.dataset.group);\r\n            localStorage.setItem('general-info', JSON.stringify(storage));\r\n            this.currentLevelGame();\r\n            btnStart.disabled = false;\r\n            if (storage.currentPage === 'game-sprint') {\r\n                await utilsGames.getGamesWordsSprint(storage.levelGame, utilsGames.getRandom());\r\n            }\r\n            else {\r\n                await utilsGames.getGamesWords(storage.levelGame, utilsGames.getRandom());\r\n            }\r\n        });\r\n    }\r\n    keyDownHandler() {\r\n        document.addEventListener('keydown', (event) => {\r\n            if (this.main.firstElementChild.className === 'wrapper-games') {\r\n                if (event.code == 'KeyF') {\r\n                    if (document.fullscreenElement) {\r\n                        document.exitFullscreen();\r\n                        this.header.style.display = '';\r\n                    }\r\n                    else {\r\n                        document.documentElement.requestFullscreen();\r\n                        this.header.style.display = 'none';\r\n                    }\r\n                }\r\n                if (event.code == 'Space') {\r\n                    const btnNotKnow = document.querySelector('.btn-not-know');\r\n                    event.preventDefault();\r\n                    btnNotKnow.click();\r\n                }\r\n                if (event.code == 'Enter') {\r\n                    const btnNext = document.querySelector('.btn-next');\r\n                    btnNext.click();\r\n                }\r\n                if (event.code == 'Digit1') {\r\n                    const answerOne = document.querySelector('.answer-1');\r\n                    answerOne.click();\r\n                }\r\n                if (event.code == 'Digit2') {\r\n                    const answerTwo = document.querySelector('.answer-2');\r\n                    answerTwo.click();\r\n                }\r\n                if (event.code == 'Digit3') {\r\n                    const answerThree = document.querySelector('.answer-3');\r\n                    answerThree.click();\r\n                }\r\n                if (event.code == 'Digit4') {\r\n                    const answerFour = document.querySelector('.answer-4');\r\n                    answerFour.click();\r\n                }\r\n                if (event.code == 'Digit5') {\r\n                    const answerFive = document.querySelector('.answer-5');\r\n                    answerFive.click();\r\n                }\r\n                if (event.code == 'ArrowLeft') {\r\n                    const btnWrong = document.querySelector('.btn-wrong');\r\n                    btnWrong.click();\r\n                }\r\n                if (event.code == 'ArrowRight') {\r\n                    const btnCorrect = document.querySelector('.btn-correct');\r\n                    btnCorrect.click();\r\n                }\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n    playAudioGameAudio() {\r\n        const iconMute = document.querySelector('.icon-mute');\r\n        iconMute.addEventListener('click', (event) => {\r\n            const audio = new Audio();\r\n            const element = event.target;\r\n            audio.volume = 0.5;\r\n            const currentAudio = element.dataset.source;\r\n            audio.src = `https://rslang-bak.herokuapp.com/${currentAudio}`;\r\n            audio.play();\r\n        });\r\n    }\r\n    playAudioAnswerGameAudio() {\r\n        const iconAudioGame = document.querySelector('.icon-audio-game');\r\n        const iconMute = document.querySelector('.icon-mute');\r\n        iconAudioGame.addEventListener('click', () => {\r\n            iconMute.click();\r\n        });\r\n    }\r\n    playAudioResultGameAudio() {\r\n        const iconAudioPopup = document.querySelectorAll('.icon-audio-popup');\r\n        iconAudioPopup.forEach((item) => {\r\n            item.addEventListener('click', (event) => {\r\n                const audio = new Audio();\r\n                const element = event.target;\r\n                audio.volume = 0.5;\r\n                const currentAudio = element.dataset.source;\r\n                audio.src = `https://rslang-bak.herokuapp.com/${currentAudio}`;\r\n                audio.play();\r\n            });\r\n        });\r\n    }\r\n    rebootPage() {\r\n        window.addEventListener('load', async () => {\r\n            if (localStorage.getItem('general-info')) {\r\n                utils.updateStorageGeneralInfo();\r\n                switch (storage.currentPage) {\r\n                    case 'game-audio':\r\n                        this.showGameAudio();\r\n                        this.transitionTextbook();\r\n                        break;\r\n                    case 'game-sprint':\r\n                        this.showGameSprint();\r\n                        break;\r\n                    case 'textbook':\r\n                        this.goToGameAudioFromPageTextbook();\r\n                        this.goToGameSprintFromPageTextbook();\r\n                        break;\r\n                    case 'game-audio-from-textbook':\r\n                        this.logoLinkHome.click();\r\n                        break;\r\n                    case 'game-sprint-from-textbook':\r\n                        this.logoLinkHome.click();\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    startAllListenerGames() {\r\n        this.goToGameSprint();\r\n        this.goToGameAudio();\r\n        this.rebootPage();\r\n        this.transitionTextbook();\r\n        this.keyDownHandler();\r\n        this.fullscreenRoundGame();\r\n        this.installPathsAndVolumeAudio();\r\n    }\r\n}\r\nexport default GamesController;\r\n","import RenderView from '../view/render';\r\nimport RequestsApi from '../module/requestsApi';\r\nimport { storeUserInfo, storage, storeGameRound } from './storage';\r\nimport Utils from '../module/components/utils';\r\nimport GamesController from './controller-games';\r\nimport StatisticGames from '../module/components/statistic';\r\nconst api = new RequestsApi();\r\nconst render = new RenderView();\r\nconst utils = new Utils();\r\nconst statistic = new StatisticGames();\r\nclass AppController extends GamesController {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.wrapper = document.querySelector('.wrapper');\r\n        this.main = document.querySelector('.main');\r\n        this.signIn = document.querySelector('.sign-in');\r\n        this.footer = document.querySelector('.footer');\r\n        this.popupSignIn = document.querySelector('.popup-sign-in');\r\n        this.popupAbout = document.querySelector('.popup-about');\r\n        this.popupStatistic = document.querySelector('.popup-statistic');\r\n        this.menuBurg = document.querySelector('.menu-btn');\r\n        this.menuHeader = document.querySelector('.menu-header');\r\n        this.subMenuList = document.querySelector('.submenu-list');\r\n        this.subMenuLink = document.querySelector('.sub-menu-link');\r\n        this.linkToRegistered = document.querySelector('.link-to-registered');\r\n        this.linkToSignup = document.querySelector('.link-to-signup');\r\n        this.formPopapRegistered = document.querySelector('.form-popap-registered');\r\n        this.formPopapSignup = document.querySelector('.form-popap-signup');\r\n        this.formCloseBtn = document.querySelector('.form-close-btn');\r\n        this.aboutCloseBtn = document.querySelector('.about-close-btn');\r\n        this.statisticCloseBtn = document.querySelector('.statistic-close-btn');\r\n        this.messageError = document.querySelector('.message-error');\r\n        this.messageErrorSignin = document.querySelector('.message-error-signin');\r\n        this.logOutBox = document.querySelector('.avatar-box');\r\n        this.logOutBtn = document.querySelector('.log-out');\r\n        this.linkTextbook = document.querySelector('#link-textbook');\r\n        this.linkHome = document.querySelector('#link-home');\r\n        this.linkTeam = document.querySelector('#link-team');\r\n        this.linkStatistic = document.querySelector('#link-statistic');\r\n        this.logoLinkHome = document.querySelector('.logo');\r\n        this.paginationTextbook = document.querySelector('.pagination-textbook');\r\n        this.wrapperCardWords = document.querySelector('.wrapper-card-words');\r\n        this.menuListItemDifficulty = document.querySelector('.menu-list-item-difficulty');\r\n        this.audio = new Audio();\r\n    }\r\n    showMenu() {\r\n        this.menuBurg.addEventListener('click', () => {\r\n            this.menuBurg.classList.toggle('active');\r\n            this.menuHeader.classList.toggle('active');\r\n            this.wrapper.classList.toggle('active');\r\n        });\r\n    }\r\n    async outputTextbook() {\r\n        storage.currentPage = 'textbook';\r\n        localStorage.setItem('general-info', JSON.stringify(storage));\r\n        this.main.innerHTML = render.renderTextbook();\r\n        if (storage.isSignupUser) {\r\n            await utils.getCardsWordsSignupUser(storeUserInfo, storage);\r\n        }\r\n        else {\r\n            await utils.getCardsWords(storage.groupWords, storage.pageWords);\r\n        }\r\n        utils.getPaginationCards(storage.pageWords);\r\n        utils.toggleDisableArrowPagination();\r\n        utils.updateStorageGeneralInfo();\r\n        utils.showHideBtnDifficulty();\r\n        utils.showHideSectionDifficulty();\r\n        utils.isAllLearnedWordAndDifficulty();\r\n        utils.activeLevelWords();\r\n        this.addWordDifficult();\r\n        this.addLearnedWords();\r\n        this.transitionFromTextbookToHardWords();\r\n    }\r\n    async outputDifficultWordPage() {\r\n        storage.currentPage = 'difficult-words';\r\n        localStorage.setItem('general-info', JSON.stringify(storage));\r\n        this.main.innerHTML = '';\r\n        this.main.innerHTML = render.renderDifficultyPage();\r\n        await utils.getAllDifficultyCardsWords(storeUserInfo);\r\n        this.transitionFromHardWordsToTextbook();\r\n        this.goToLearnedWordsPage();\r\n        utils.removeClassActiveFromMain();\r\n        this.listenerGamesStart();\r\n    }\r\n    goToTextbook() {\r\n        this.linkTextbook.addEventListener('click', async () => {\r\n            await this.outputTextbook();\r\n            this.wrapper.style.backgroundImage = '';\r\n            this.footer.classList.remove('active-hidden');\r\n            this.menuBurg.click();\r\n        });\r\n    }\r\n    goToDifficultWordsPage() {\r\n        this.menuListItemDifficulty.addEventListener('click', async () => {\r\n            await this.outputDifficultWordPage();\r\n            this.wrapper.style.backgroundImage = '';\r\n            utils.removeClassActiveFromMain();\r\n            utils.showHideBtnIconInfoStat();\r\n            this.menuBurg.click();\r\n        });\r\n    }\r\n    goToLearnedWordsPage() {\r\n        const linkStudyWord = document.querySelector('.link-study-word');\r\n        const gamesBlock = document.querySelector('.games-block');\r\n        linkStudyWord.addEventListener('click', async () => {\r\n            storage.currentPage = 'learned-words';\r\n            localStorage.setItem('general-info', JSON.stringify(storage));\r\n            utils.disabledLinkFromDifficultPage();\r\n            await utils.getAllLearnedCardsWords(storeUserInfo);\r\n            gamesBlock.classList.add('active-hidden');\r\n            this.returnDifficultPageFromLearnedPage();\r\n            utils.isEmptyDifficultyWords();\r\n            this.deleteWordLearned();\r\n            utils.showHideBtnIconInfoStat();\r\n        });\r\n    }\r\n    returnDifficultPageFromLearnedPage() {\r\n        const backToDifficult = document.querySelector('.back-to-difficult');\r\n        const gamesBlock = document.querySelector('.games-block');\r\n        backToDifficult.addEventListener('click', async () => {\r\n            await this.outputDifficultWordPage();\r\n            gamesBlock.classList.remove('active-hidden');\r\n            utils.isEmptyDifficultyWords();\r\n            this.deleteWordDifficult();\r\n            utils.showHideBtnIconInfoStat();\r\n        });\r\n    }\r\n    hideBlockGame() {\r\n        const gamesBlock = document.querySelector('.games-block');\r\n        gamesBlock.classList.add('active-hidden');\r\n    }\r\n    navigationPageWords() {\r\n        this.main.addEventListener('click', async (event) => {\r\n            const element = event.target;\r\n            if (element.classList.contains('next-arrow')) {\r\n                storage.pageWords++;\r\n                await utils.outputWordsAndPagination();\r\n                utils.toggleDisableArrowPagination();\r\n                utils.showHideBtnDifficulty();\r\n                this.addWordDifficult();\r\n                this.addLearnedWords();\r\n            }\r\n            if (element.classList.contains('prev-arrow')) {\r\n                storage.pageWords--;\r\n                await utils.outputWordsAndPagination();\r\n                utils.toggleDisableArrowPagination();\r\n                utils.showHideBtnDifficulty();\r\n                this.addWordDifficult();\r\n                this.addLearnedWords();\r\n            }\r\n            if (element.classList.contains('btn-pagination')) {\r\n                const currentPage = element.dataset.page;\r\n                storage.pageWords = +currentPage;\r\n                await utils.outputWordsAndPagination();\r\n                utils.toggleDisableArrowPagination();\r\n                utils.showHideBtnDifficulty();\r\n                this.addWordDifficult();\r\n                this.addLearnedWords();\r\n            }\r\n            if (element.classList.contains('levels-item')) {\r\n                const currentGroup = element.dataset.group;\r\n                storage.groupWords = +currentGroup;\r\n                const levelWords = document.querySelectorAll('.levels-item');\r\n                levelWords.forEach((item) => item.classList.remove('active'));\r\n                element.classList.add('active');\r\n                await utils.outputWordsAndPagination();\r\n                utils.toggleDisableArrowPagination();\r\n                utils.showHideBtnDifficulty();\r\n                this.addWordDifficult();\r\n                this.addLearnedWords();\r\n            }\r\n        });\r\n    }\r\n    addWordDifficult() {\r\n        const buttonAddDifficult = document.querySelectorAll('.button-add-difficult');\r\n        buttonAddDifficult.forEach((item) => {\r\n            item.addEventListener('click', async (event) => {\r\n                const element = event.target;\r\n                const elementCard = element.parentNode.parentNode;\r\n                const elementButtonEasy = element.nextElementSibling;\r\n                storage.wordId = element.dataset.idword;\r\n                localStorage.setItem('general-info', JSON.stringify(storage));\r\n                utils.updateStorageGeneralInfo();\r\n                try {\r\n                    const response = await api.getWord(storeUserInfo, storage);\r\n                    storeGameRound.gamesAnswer = response.optional.gamesAnswer;\r\n                    if (element.classList.contains('active')) {\r\n                        await api.updateWordsDifficulty(storeUserInfo, storage, storeGameRound.gamesAnswer, 'normal');\r\n                    }\r\n                    else {\r\n                        await api.updateWordsDifficulty(storeUserInfo, storage, storeGameRound.gamesAnswer, 'hard');\r\n                    }\r\n                }\r\n                catch (error) {\r\n                    await api.createWordsDifficulty(storeUserInfo, storage, storeGameRound.gamesAnswer, 'hard');\r\n                }\r\n                finally {\r\n                    elementButtonEasy.classList.remove('active');\r\n                    element.classList.toggle('active');\r\n                    if (elementCard.classList.contains('active-learnt')) {\r\n                        elementCard.classList.remove('active-learnt');\r\n                    }\r\n                    elementCard.classList.toggle('active-difficulty');\r\n                    utils.isAllLearnedWordAndDifficulty();\r\n                }\r\n            });\r\n        });\r\n    }\r\n    deleteWordDifficult() {\r\n        const buttonDeleteDifficult = document.querySelectorAll('.button-delete-difficult');\r\n        buttonDeleteDifficult.forEach((item) => {\r\n            item.addEventListener('click', async (event) => {\r\n                const element = event.target;\r\n                storage.wordId = element.dataset.idword;\r\n                localStorage.setItem('general-info', JSON.stringify(storage));\r\n                utils.updateStorageGeneralInfo();\r\n                try {\r\n                    const response = await api.getWord(storeUserInfo, storage);\r\n                    storeGameRound.gamesAnswer = response.optional.gamesAnswer;\r\n                    await api.updateWordsDifficulty(storeUserInfo, storage, storeGameRound.gamesAnswer, 'normal');\r\n                }\r\n                catch (error) {\r\n                    await api.updateWordsDifficulty(storeUserInfo, storage, storeGameRound.gamesAnswer, 'normal');\r\n                }\r\n                finally {\r\n                    await utils.getAllDifficultyCardsWords(storeUserInfo);\r\n                    utils.isEmptyDifficultyWords();\r\n                    this.deleteWordDifficult();\r\n                }\r\n            });\r\n        });\r\n    }\r\n    deleteWordLearned() {\r\n        const buttonDeleteStudy = document.querySelectorAll('.button-delete-study');\r\n        buttonDeleteStudy.forEach((item) => {\r\n            item.addEventListener('click', async (event) => {\r\n                const element = event.target;\r\n                storage.wordId = element.dataset.idword;\r\n                localStorage.setItem('general-info', JSON.stringify(storage));\r\n                utils.updateStorageGeneralInfo();\r\n                try {\r\n                    const response = await api.getWord(storeUserInfo, storage);\r\n                    storeGameRound.gamesAnswer = response.optional.gamesAnswer;\r\n                    await api.updateWordsDifficulty(storeUserInfo, storage, storeGameRound.gamesAnswer, 'normal');\r\n                }\r\n                catch (error) {\r\n                    await api.updateWordsDifficulty(storeUserInfo, storage, storeGameRound.gamesAnswer, 'normal');\r\n                }\r\n                finally {\r\n                    await utils.getAllLearnedCardsWords(storeUserInfo);\r\n                    utils.isEmptyDifficultyWords();\r\n                    this.deleteWordLearned();\r\n                }\r\n            });\r\n        });\r\n    }\r\n    addLearnedWords() {\r\n        const buttonStudyWord = document.querySelectorAll('.button-study-word');\r\n        buttonStudyWord.forEach((item) => {\r\n            item.addEventListener('click', async (event) => {\r\n                const element = event.target;\r\n                const elementCard = element.parentNode.parentNode;\r\n                const elementButtonHard = element.previousElementSibling;\r\n                storage.wordId = element.dataset.idword;\r\n                localStorage.setItem('general-info', JSON.stringify(storage));\r\n                utils.updateStorageGeneralInfo();\r\n                try {\r\n                    const response = await api.getWord(storeUserInfo, storage);\r\n                    storeGameRound.gamesAnswer = response.optional.gamesAnswer;\r\n                    if (element.classList.contains('active')) {\r\n                        await api.updateWordsDifficulty(storeUserInfo, storage, storeGameRound.gamesAnswer, 'normal');\r\n                    }\r\n                    else {\r\n                        await api.updateWordsDifficulty(storeUserInfo, storage, storeGameRound.gamesAnswer, 'easy');\r\n                    }\r\n                }\r\n                catch (error) {\r\n                    await api.createWordsDifficulty(storeUserInfo, storage, storeGameRound.gamesAnswer, 'easy');\r\n                }\r\n                finally {\r\n                    elementButtonHard.classList.remove('active');\r\n                    element.classList.toggle('active');\r\n                    if (elementCard.classList.contains('active-difficulty')) {\r\n                        elementCard.classList.remove('active-difficulty');\r\n                    }\r\n                    elementCard.classList.toggle('active-learnt');\r\n                    utils.isAllLearnedWordAndDifficulty();\r\n                }\r\n            });\r\n        });\r\n    }\r\n    playAudioExample() {\r\n        this.main.addEventListener('click', async (event) => {\r\n            const element = event.target;\r\n            if (element.classList.contains('icon-audio')) {\r\n                let playNum = 0;\r\n                this.audio.volume = 0.5;\r\n                if (!this.audio.paused) {\r\n                    this.audio.pause();\r\n                    this.audio.currentTime = 0;\r\n                }\r\n                const currentAudio = element.dataset.source;\r\n                const arrAudio = [currentAudio, `${currentAudio.slice(0, -4)}_meaning.mp3`, `${currentAudio.slice(0, -4)}_example.mp3`];\r\n                this.audio.src = `https://rslang-bak.herokuapp.com/${arrAudio[playNum]}`;\r\n                this.audio.play();\r\n                const playNext = () => {\r\n                    const newPlayNum = (playNum + 1) % arrAudio.length;\r\n                    this.audio.currentTime = 0;\r\n                    playNum = newPlayNum;\r\n                    this.audio.src = `https://rslang-bak.herokuapp.com/${arrAudio[playNum]}`;\r\n                    this.audio.play();\r\n                };\r\n                this.audio.addEventListener('ended', () => {\r\n                    if (playNum === 2) {\r\n                        this.audio.pause();\r\n                        this.audio.currentTime = 0;\r\n                        return false;\r\n                    }\r\n                    this.audio.pause();\r\n                    playNext();\r\n                });\r\n            }\r\n        });\r\n    }\r\n    showHideLearningProgress() {\r\n        this.main.addEventListener('click', (event) => {\r\n            const element = event.target;\r\n            const messageElement = event.target.nextElementSibling;\r\n            if (!element.classList.contains('icon-info-stat'))\r\n                return false;\r\n            messageElement.classList.toggle('active-hidden');\r\n        });\r\n    }\r\n    goToHome() {\r\n        this.linkHome.addEventListener('click', () => {\r\n            storage.currentPage = 'home';\r\n            localStorage.setItem('general-info', JSON.stringify(storage));\r\n            this.main.innerHTML = render.renderHomePage();\r\n            this.wrapper.style.backgroundImage = 'url(\"./assets/img/bg-home2.jpg\")';\r\n            utils.removeClassActiveFromMain();\r\n            this.goToInfoProject();\r\n            this.footer.classList.remove('active-hidden');\r\n            this.menuBurg.click();\r\n        });\r\n        this.logoLinkHome.addEventListener('click', (event) => {\r\n            event.preventDefault();\r\n            storage.currentPage = 'home';\r\n            localStorage.setItem('general-info', JSON.stringify(storage));\r\n            this.main.innerHTML = render.renderHomePage();\r\n            this.wrapper.style.backgroundImage = 'url(\"./assets/img/bg-home2.jpg\")';\r\n            this.footer.classList.remove('active-hidden');\r\n            this.goToInfoProject();\r\n            utils.removeClassActiveFromMain();\r\n        });\r\n    }\r\n    showSubMenu() {\r\n        this.menuHeader.addEventListener('click', (event) => {\r\n            event.preventDefault();\r\n            if (event.target.classList.contains('sub-menu-link') === true) {\r\n                this.subMenuList.classList.toggle('active');\r\n                this.subMenuLink.classList.toggle('active');\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n    hideMenuClickBody() {\r\n        this.wrapper.addEventListener('click', (event) => {\r\n            if (event.target.classList.contains('wrapper')) {\r\n                this.menuBurg.classList.remove('active');\r\n                this.menuHeader.classList.remove('active');\r\n                this.wrapper.classList.remove('active');\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n    showRegisteredForm() {\r\n        this.linkToRegistered.addEventListener('click', (event) => {\r\n            event.preventDefault();\r\n            this.formPopapRegistered.classList.toggle('active');\r\n            this.formPopapSignup.classList.toggle('active-hidden');\r\n        });\r\n    }\r\n    showSigninForm() {\r\n        this.linkToSignup.addEventListener('click', (event) => {\r\n            event.preventDefault();\r\n            this.formPopapRegistered.classList.toggle('active');\r\n            this.formPopapSignup.classList.toggle('active-hidden');\r\n        });\r\n    }\r\n    closeFormRegist() {\r\n        this.formCloseBtn.addEventListener('click', () => {\r\n            this.popupSignIn.classList.toggle('active');\r\n            this.wrapper.classList.remove('active');\r\n        });\r\n    }\r\n    transitionFromTextbookToHardWords() {\r\n        const difficultWords = document.querySelector('.difficult-words');\r\n        difficultWords.addEventListener('click', async () => {\r\n            await this.outputDifficultWordPage();\r\n            utils.isEmptyDifficultyWords();\r\n            this.deleteWordDifficult();\r\n            utils.removeClassActiveFromMain();\r\n            utils.showHideBtnIconInfoStat();\r\n        });\r\n    }\r\n    listenerGamesStart() {\r\n        this.goToGameAudioFromPageTextbook();\r\n        this.goToGameSprintFromPageTextbook();\r\n    }\r\n    transitionFromHardWordsToTextbook() {\r\n        const backToTextbooks = document.querySelector('.back-to-textbook');\r\n        backToTextbooks.addEventListener('click', async () => {\r\n            await this.outputTextbook();\r\n            this.listenerGamesStart();\r\n        });\r\n    }\r\n    openFormRegist() {\r\n        this.signIn.addEventListener('click', () => {\r\n            this.popupSignIn.classList.toggle('active');\r\n            this.wrapper.classList.add('active');\r\n        });\r\n    }\r\n    showHideTeamPage() {\r\n        this.aboutCloseBtn.addEventListener('click', () => {\r\n            this.popupAbout.classList.remove('active');\r\n        });\r\n        this.linkTeam.addEventListener('click', () => {\r\n            this.popupAbout.classList.add('active');\r\n            this.menuBurg.click();\r\n        });\r\n    }\r\n    goToInfoProject() {\r\n        const btnInfoProject = document.querySelector('.btn-details');\r\n        btnInfoProject.addEventListener('click', () => {\r\n            this.popupAbout.classList.add('active');\r\n        });\r\n    }\r\n    hideStatistic() {\r\n        this.statisticCloseBtn.addEventListener('click', () => {\r\n            this.popupStatistic.classList.remove('active');\r\n        });\r\n    }\r\n    goToStatistic() {\r\n        this.linkStatistic.addEventListener('click', () => {\r\n            this.popupStatistic.classList.add('active');\r\n            this.menuBurg.click();\r\n            this.hideStatistic();\r\n        });\r\n    }\r\n    showPersonalAccount() {\r\n        this.logOutBox.classList.add('active');\r\n        this.signIn.classList.add('active-hidden');\r\n        this.formCloseBtn.click();\r\n    }\r\n    logOutUser() {\r\n        this.wrapper.addEventListener('click', (event) => {\r\n            if (event.target.classList.contains('log-out') !== true)\r\n                return false;\r\n            this.logOutBox.classList.remove('active');\r\n            this.signIn.classList.remove('active-hidden');\r\n            utils.notSignupUser();\r\n            utils.conditionLoadWords();\r\n            if (storage.currentPage === 'difficult-words' || storage.currentPage === 'learned-words') {\r\n                this.logoLinkHome.click();\r\n            }\r\n            utils.removeClassActiveFromMain();\r\n            localStorage.clear();\r\n        });\r\n    }\r\n    registeredUser() {\r\n        this.formPopapRegistered.addEventListener('submit', async (event) => {\r\n            event.preventDefault();\r\n            this.messageError.textContent = '';\r\n            this.messageError.style.display = 'none';\r\n            const newUser = {\r\n                name: this.formPopapRegistered.nameUser.value,\r\n                email: this.formPopapRegistered.email.value,\r\n                password: this.formPopapRegistered.password.value,\r\n            };\r\n            await api.createUser(newUser);\r\n            await api.loginUser(newUser);\r\n            this.logOutBox.innerHTML = render.renderLogOut(newUser.name);\r\n            this.showPersonalAccount();\r\n            await statistic.getStatisticAfterReloadPage();\r\n            utils.signupUser();\r\n        });\r\n    }\r\n    async getRefreshToken() {\r\n        try {\r\n            await api.getNewUserToken(storeUserInfo);\r\n            await api.getUser(storeUserInfo);\r\n            this.logOutBox.innerHTML = render.renderLogOut(storeUserInfo.name);\r\n            this.logOutBox.classList.add('active');\r\n            this.signIn.classList.add('active-hidden');\r\n            await statistic.getStatisticAfterReloadPage();\r\n            utils.signupUser();\r\n            this.addWordDifficult();\r\n            this.addLearnedWords();\r\n        }\r\n        catch (error) {\r\n            this.signIn.click();\r\n            this.messageErrorSignin.textContent = 'Время прошлой сессии истекло! Войдите в свой аккаунт еще раз.';\r\n            this.messageErrorSignin.style.display = 'block';\r\n            utils.notSignupUser();\r\n        }\r\n    }\r\n    loginAccountUser() {\r\n        this.formPopapSignup.addEventListener('submit', async (event) => {\r\n            event.preventDefault();\r\n            this.messageErrorSignin.textContent = '';\r\n            this.messageErrorSignin.style.display = 'none';\r\n            const newUser = {\r\n                email: this.formPopapSignup.email.value,\r\n                password: this.formPopapSignup.password.value,\r\n            };\r\n            await api.loginUser(newUser);\r\n            utils.updateStorageUserInfo();\r\n            this.logOutBox.innerHTML = render.renderLogOut(storeUserInfo.name);\r\n            this.showPersonalAccount();\r\n            utils.signupUser();\r\n            await utils.conditionLoadWords();\r\n            utils.showHideBtnDifficulty();\r\n            this.addWordDifficult();\r\n            this.addLearnedWords();\r\n            await statistic.getStatisticAfterReloadPage();\r\n            if (storage.currentPage === 'textbook') {\r\n                utils.isAllLearnedWordAndDifficulty();\r\n            }\r\n        });\r\n    }\r\n    getLocalStorage() {\r\n        window.addEventListener('load', async () => {\r\n            if (localStorage.getItem('user-info')) {\r\n                utils.updateStorageUserInfo();\r\n                try {\r\n                    await api.getUser(storeUserInfo);\r\n                    this.logOutBox.innerHTML = render.renderLogOut(storeUserInfo.name);\r\n                    this.logOutBox.classList.add('active');\r\n                    this.signIn.classList.add('active-hidden');\r\n                    await statistic.getStatisticAfterReloadPage();\r\n                    utils.signupUser();\r\n                    this.addWordDifficult();\r\n                    this.addLearnedWords();\r\n                }\r\n                catch (error) {\r\n                    await this.getRefreshToken();\r\n                }\r\n            }\r\n            if (localStorage.getItem('general-info')) {\r\n                utils.updateStorageGeneralInfo();\r\n                switch (storage.currentPage) {\r\n                    case 'home':\r\n                        this.wrapper.style.backgroundImage = 'url(\"./assets/img/bg-home2.jpg\")';\r\n                        this.goToInfoProject();\r\n                        break;\r\n                    case 'textbook':\r\n                        this.wrapper.style.backgroundImage = '';\r\n                        utils.activeLevelWords();\r\n                        if (storage.isSignupUser) {\r\n                            await utils.getCardsWordsSignupUser(storeUserInfo, storage);\r\n                        }\r\n                        else {\r\n                            await utils.getCardsWords(storage.groupWords, storage.pageWords);\r\n                        }\r\n                        utils.getPaginationCards(storage.pageWords);\r\n                        utils.toggleDisableArrowPagination();\r\n                        utils.showHideBtnDifficulty();\r\n                        utils.showHideSectionDifficulty();\r\n                        utils.isAllLearnedWordAndDifficulty();\r\n                        this.addWordDifficult();\r\n                        this.transitionFromTextbookToHardWords();\r\n                        this.addLearnedWords();\r\n                        break;\r\n                    case 'difficult-words':\r\n                        if (storage.isSignupUser) {\r\n                            await this.outputDifficultWordPage();\r\n                            utils.isEmptyDifficultyWords();\r\n                            this.deleteWordDifficult();\r\n                            utils.showHideBtnIconInfoStat();\r\n                        }\r\n                        break;\r\n                    case 'learned-words':\r\n                        await this.outputDifficultWordPage();\r\n                        this.hideBlockGame();\r\n                        utils.disabledLinkFromDifficultPage();\r\n                        await utils.getAllLearnedCardsWords(storeUserInfo);\r\n                        this.returnDifficultPageFromLearnedPage();\r\n                        utils.isEmptyDifficultyWords();\r\n                        this.deleteWordLearned();\r\n                        utils.showHideBtnIconInfoStat();\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                this.wrapper.style.backgroundImage = 'url(\"./assets/img/bg-home2.jpg\")';\r\n                utils.removeClassActiveFromMain();\r\n                this.goToInfoProject();\r\n            }\r\n        });\r\n    }\r\n    listenerAll() {\r\n        this.showMenu();\r\n        this.showSubMenu();\r\n        this.hideMenuClickBody();\r\n        this.showRegisteredForm();\r\n        this.showSigninForm();\r\n        this.closeFormRegist();\r\n        this.openFormRegist();\r\n        this.registeredUser();\r\n        this.loginAccountUser();\r\n        this.getLocalStorage();\r\n        this.logOutUser();\r\n        this.goToTextbook();\r\n        this.goToHome();\r\n        this.navigationPageWords();\r\n        this.playAudioExample();\r\n        this.goToDifficultWordsPage();\r\n        this.showHideTeamPage();\r\n        this.showHideLearningProgress();\r\n        this.goToStatistic();\r\n    }\r\n}\r\nexport default AppController;\r\n","const storeUserInfo = {\r\n    message: null,\r\n    name: null,\r\n    refreshToken: null,\r\n    token: null,\r\n    userId: null,\r\n};\r\nlet storage = {\r\n    currentPage: 'home',\r\n    groupWords: 0,\r\n    pageWords: 0,\r\n    isSignupUser: false,\r\n    wordId: null,\r\n    levelGame: 0,\r\n};\r\nconst storeGameRound = {\r\n    gameAudio: [],\r\n    gameSprint: [],\r\n    arrAnswerGameAudio: [],\r\n    arrAnswerGameSprint: [],\r\n    longSeriesAnswer: [],\r\n    countGame: 0,\r\n    countCorrectAnswerInRowSprint: 0,\r\n    countPaginationSprint: 0,\r\n    learnWordsInGames: 0,\r\n    isClearDailyStat: false,\r\n    currentWordTranslate: '',\r\n    currentWord: '',\r\n    randomWord: '',\r\n    trueAnswerGame: {},\r\n    falseAnswerGame: {},\r\n    optionalAudioCall: { correct: 0, wrong: 0, total: 0 },\r\n    optionalSprint: { correct: 0, wrong: 0, total: 0 },\r\n    gamesAnswer: { correct: 0, wrong: 0 },\r\n    difficultyWord: '',\r\n};\r\nconst dailyStat = {\r\n    date: new Date().toLocaleDateString(),\r\n    games: {\r\n        audio: { correctAnswer: 0, wrongAnswer: 0, newWords: 0, percentCorrect: 0, longSeries: 0 },\r\n        sprint: { correctAnswer: 0, wrongAnswer: 0, newWords: 0, percentCorrect: 0, longSeries: 0 },\r\n    },\r\n    totalNewWords: 0,\r\n    learnedWordsDaily: 0,\r\n    percentAllCorrect: 0,\r\n    allWordsDaily: 0,\r\n    wordsList: {\r\n        allWordsList: [],\r\n    },\r\n};\r\nwindow.addEventListener('load', () => {\r\n    if (localStorage.getItem('general-info')) {\r\n        storage = JSON.parse(localStorage.getItem('general-info'));\r\n    }\r\n});\r\nexport { storeUserInfo, storage, storeGameRound, dailyStat };\r\n","class BackToHeader {\r\n    trackScroll() {\r\n        const goTopBtn = document.querySelector('.top');\r\n        const scrolled = window.pageYOffset;\r\n        const coords = document.documentElement.clientHeight;\r\n        if (scrolled > coords) {\r\n            goTopBtn.classList.add('active-up');\r\n        }\r\n        if (scrolled < coords) {\r\n            goTopBtn.classList.remove('active-up');\r\n        }\r\n    }\r\n    backToTop() {\r\n        let timeOut;\r\n        const top = Math.max(document.body.scrollTop, document.documentElement.scrollTop);\r\n        if (top > 0) {\r\n            window.scrollBy(0, -10e5);\r\n            timeOut = setTimeout(this.backToTop, 20);\r\n        }\r\n        else\r\n            clearTimeout((timeOut));\r\n    }\r\n    upHeader() {\r\n        const goTopBtn = document.querySelector('.top');\r\n        window.addEventListener('scroll', () => this.trackScroll());\r\n        goTopBtn.addEventListener('click', () => this.backToTop());\r\n    }\r\n}\r\nexport default BackToHeader;\r\n","class PreloaderPage {\r\n    preloaderApp() {\r\n        window.addEventListener('load', () => {\r\n            const preloader = document.querySelector('.preloader');\r\n            setTimeout(() => {\r\n                preloader.classList.add('preloader-hidden');\r\n            }, 1000);\r\n        });\r\n    }\r\n    showPreloaderPage() {\r\n        const preloader = document.querySelector('.preloader-page');\r\n        const footer = document.querySelector('.footer');\r\n        preloader.classList.add('preloader-visible');\r\n        footer.classList.add('active-hidden');\r\n    }\r\n    hidePreloaderPage() {\r\n        const preloader = document.querySelector('.preloader-page');\r\n        const footer = document.querySelector('.footer');\r\n        setTimeout(() => {\r\n            preloader.classList.remove('preloader-visible');\r\n            footer.classList.remove('active-hidden');\r\n        }, 500);\r\n    }\r\n}\r\nexport default PreloaderPage;\r\n","import RequestsApi from '../requestsApi';\r\nimport { storeGameRound, storeUserInfo, storage, dailyStat } from '../../controller/storage';\r\nconst api = new RequestsApi();\r\nclass StatisticGames {\r\n    saveStatisticStorage(dataResponse) {\r\n        if (dataResponse.date !== new Date().toLocaleDateString()) {\r\n            const newDailyStat = JSON.parse(JSON.stringify(dailyStat));\r\n            newDailyStat.wordsList = dataResponse.wordsList;\r\n            storeGameRound.isClearDailyStat = true;\r\n            return newDailyStat;\r\n        }\r\n        else {\r\n            const newDailyStat = JSON.parse(JSON.stringify(dailyStat));\r\n            newDailyStat.date = dataResponse.date;\r\n            newDailyStat.games = dataResponse.games;\r\n            newDailyStat.learnedWordsDaily = dataResponse.learnedWordsDaily;\r\n            newDailyStat.percentAllCorrect = dataResponse.percentAllCorrect;\r\n            newDailyStat.totalNewWords = dataResponse.percentAllCorrect;\r\n            newDailyStat.allWordsDaily = dataResponse.allWordsDaily;\r\n            newDailyStat.wordsList = dataResponse.wordsList;\r\n            return newDailyStat;\r\n        }\r\n    }\r\n    uniqueNewWords({ trueAnswerGame, falseAnswerGame }, { wordsList: { allWordsList } }) {\r\n        const uniqueValue = new Set([...Object.keys(trueAnswerGame), ...Object.keys(falseAnswerGame), ...allWordsList]);\r\n        return uniqueValue;\r\n    }\r\n    recordNewWordsGamesInStatistic({ trueAnswerGame, falseAnswerGame }, { wordsList: { allWordsList } }) {\r\n        const totalAnswer = [...Object.keys(trueAnswerGame), ...Object.keys(falseAnswerGame)];\r\n        return totalAnswer.reduce((total, item) => {\r\n            let count = total;\r\n            if (allWordsList.includes(item)) {\r\n                return count;\r\n            }\r\n            count++;\r\n            return count;\r\n        }, 0);\r\n    }\r\n    updateDataStatisticGames({ trueAnswerGame, falseAnswerGame }, newDailyStat) {\r\n        if (storage.currentPage === 'game-audio' || storage.currentPage === 'game-audio-from-textbook') {\r\n            newDailyStat.games.audio.correctAnswer += Object.keys(trueAnswerGame).length;\r\n            newDailyStat.games.audio.wrongAnswer += Object.keys(falseAnswerGame).length;\r\n            newDailyStat.games.audio.newWords = this.recordNewWordsGamesInStatistic(storeGameRound, newDailyStat) === 0\r\n                ? newDailyStat.games.audio.newWords\r\n                : this.recordNewWordsGamesInStatistic(storeGameRound, newDailyStat);\r\n            const totalWordsAudio = newDailyStat.games.audio.correctAnswer + newDailyStat.games.audio.wrongAnswer;\r\n            newDailyStat.games.audio.percentCorrect = Math.round((newDailyStat.games.audio.correctAnswer / totalWordsAudio) * 100);\r\n            newDailyStat.games.audio.longSeries = newDailyStat.games.audio.longSeries < Math.max(...storeGameRound.longSeriesAnswer)\r\n                ? Math.max(...storeGameRound.longSeriesAnswer)\r\n                : newDailyStat.games.audio.longSeries;\r\n        }\r\n        if (storage.currentPage === 'game-sprint' || storage.currentPage === 'game-sprint-from-textbook') {\r\n            newDailyStat.games.sprint.correctAnswer += Object.keys(trueAnswerGame).length;\r\n            newDailyStat.games.sprint.wrongAnswer += Object.keys(falseAnswerGame).length;\r\n            newDailyStat.games.sprint.newWords = this.recordNewWordsGamesInStatistic(storeGameRound, newDailyStat) === 0\r\n                ? newDailyStat.games.sprint.newWords\r\n                : this.recordNewWordsGamesInStatistic(storeGameRound, newDailyStat);\r\n            const totalWordsSprint = newDailyStat.games.sprint.correctAnswer + newDailyStat.games.sprint.wrongAnswer;\r\n            newDailyStat.games.sprint.percentCorrect = Math.round((newDailyStat.games.sprint.correctAnswer / totalWordsSprint) * 100);\r\n            newDailyStat.games.sprint.longSeries = newDailyStat.games.sprint.longSeries < Math.max(...storeGameRound.longSeriesAnswer)\r\n                ? Math.max(...storeGameRound.longSeriesAnswer)\r\n                : newDailyStat.games.sprint.longSeries;\r\n        }\r\n    }\r\n    updateDataStatistic({ trueAnswerGame, falseAnswerGame }, newDailyStat) {\r\n        const totalAnswer = Object.keys(trueAnswerGame).length + Object.keys(falseAnswerGame).length;\r\n        this.updateDataStatisticGames(storeGameRound, newDailyStat);\r\n        newDailyStat.allWordsDaily += totalAnswer;\r\n        newDailyStat.totalNewWords = newDailyStat.games.sprint.newWords + newDailyStat.games.audio.newWords;\r\n        newDailyStat.learnedWordsDaily += storeGameRound.learnWordsInGames;\r\n        const totalCurrentAnswerAll = newDailyStat.games.audio.correctAnswer + newDailyStat.games.sprint.correctAnswer;\r\n        newDailyStat.percentAllCorrect = Math.round((totalCurrentAnswerAll / newDailyStat.allWordsDaily) * 100);\r\n        newDailyStat.wordsList.allWordsList = [...this.uniqueNewWords(storeGameRound, newDailyStat)];\r\n    }\r\n    renderStatisticInPage(newDailyStat) {\r\n        const totalSprintWords = document.querySelector('.total-sprint-words');\r\n        const percentAnswerSprint = document.querySelector('.percent-answer-sprint');\r\n        const longSeriesSprint = document.querySelector('.long-series-sprint');\r\n        const totalAudioWords = document.querySelector('.total-audio-words');\r\n        const percentAnswerAudio = document.querySelector('.percent-answer-audio');\r\n        const longSeriesAudio = document.querySelector('.long-series-audio');\r\n        const totalNewWords = document.querySelector('.total-new-words');\r\n        const learnedWordsStat = document.querySelector('.learned-words-stat');\r\n        const percentCorrectAnswer = document.querySelector('.percent-correct-answer');\r\n        totalSprintWords.textContent = `${newDailyStat.games.sprint.newWords}`;\r\n        percentAnswerSprint.textContent = `${newDailyStat.games.sprint.percentCorrect}%`;\r\n        longSeriesSprint.textContent = `${newDailyStat.games.sprint.longSeries}`;\r\n        totalAudioWords.textContent = `${newDailyStat.games.audio.newWords}`;\r\n        percentAnswerAudio.textContent = `${newDailyStat.games.audio.percentCorrect}%`;\r\n        longSeriesAudio.textContent = `${newDailyStat.games.audio.longSeries}`;\r\n        totalNewWords.textContent = `${newDailyStat.totalNewWords}`;\r\n        learnedWordsStat.textContent = `${newDailyStat.learnedWordsDaily}`;\r\n        percentCorrectAnswer.textContent = `${newDailyStat.percentAllCorrect}%`;\r\n    }\r\n    async saveStatisticInDataBase() {\r\n        try {\r\n            const { optional } = await api.getStatistic(storeUserInfo);\r\n            const newDailyStat = this.saveStatisticStorage(optional);\r\n            this.updateDataStatistic(storeGameRound, newDailyStat);\r\n            this.renderStatisticInPage(newDailyStat);\r\n            await api.updateStatistic(storeUserInfo, newDailyStat);\r\n        }\r\n        catch (error) {\r\n            await api.updateStatistic(storeUserInfo, dailyStat);\r\n        }\r\n    }\r\n    async getStatisticAfterReloadPage() {\r\n        try {\r\n            const { optional } = await api.getStatistic(storeUserInfo);\r\n            const newDailyStat = this.saveStatisticStorage(optional);\r\n            this.renderStatisticInPage(newDailyStat);\r\n            if (storeGameRound.isClearDailyStat === true) {\r\n                await api.updateStatistic(storeUserInfo, newDailyStat);\r\n                storeGameRound.isClearDailyStat = false;\r\n            }\r\n        }\r\n        catch (error) {\r\n            await api.updateStatistic(storeUserInfo, dailyStat);\r\n        }\r\n    }\r\n}\r\nexport default StatisticGames;\r\n","class CreateCard {\r\n    constructor(id, image, word, wordTranslate, transcription, audio, textMeaning, textMeaningTranslate, textExample, textExampleTranslate, userWord) {\r\n        this.id = id;\r\n        this.image = image;\r\n        this.word = word;\r\n        this.wordTranslate = wordTranslate;\r\n        this.transcription = transcription;\r\n        this.audio = audio;\r\n        this.textMeaning = textMeaning;\r\n        this.textMeaningTranslate = textMeaningTranslate;\r\n        this.textExample = textExample;\r\n        this.textExampleTranslate = textExampleTranslate;\r\n        this.userWord = userWord;\r\n        this.wrapperCardWords = document.querySelector('.wrapper-card-words');\r\n        this.wrapperCardWordsDifficult = document.querySelector('.wrapper-card-words-difficult');\r\n    }\r\n    createAndRenderCards() {\r\n        const card = `\r\n      <div class=\"card-words\">\r\n        <button class=\"icon-info-stat active-hidden\" title=\"Прогресс изучения\"></button>\r\n        <div class=\"info-message active-hidden\">\r\n          <div class=\"info-block-text\">\r\n            <h4 class=\"info-message-title\">Ответы в играх</h4>\r\n            <p>Правильных ответов: <span class=\"correct-answer\">${this.userWord !== undefined ? this.userWord.optional.gamesAnswer.correct : 0}</span></p>\r\n            <p>Не правильных ответов: <span class=\"wrong-answer\">${this.userWord !== undefined ? this.userWord.optional.gamesAnswer.wrong : 0}</span></p>\r\n          </div>\r\n        </div>\r\n        <img class=\"card-words-img\" src=\"https://rslang-bak.herokuapp.com/${this.image}\" alt=\"${this.wordTranslate}\"></img>\r\n        <p class=\"word\">${this.word}</p>\r\n        <div class=\"block-words\">\r\n          <p class=\"word-translate\">${this.wordTranslate}</p>\r\n          <p class=\"word-transcription\">${this.transcription}</p>\r\n          <button class=\"icon-audio\" data-source=\"${this.audio}\"></button>\r\n        </div>\r\n        <div class=\"block-example\">\r\n          <h3 class=\"h3\">Значение</h3>\r\n          <p>${this.textMeaning}</p>\r\n          <p>${this.textMeaningTranslate}</p>\r\n          <h3 class=\"h3\">Пример</h3>\r\n          <p>${this.textExample}</p>\r\n          <p>${this.textExampleTranslate}</p>\r\n        </div>\r\n        <div class=\"block-btn active-hidden\">\r\n          <button class=\"button-add-difficult\" data-idword=\"${this.id}\">Сложное</button>\r\n          <button class=\"button-study-word\" data-idword=\"${this.id}\">Изученное</button>\r\n        </div>\r\n      </div>\r\n    `;\r\n        this.wrapperCardWords.insertAdjacentHTML('beforeend', card);\r\n    }\r\n    createAndRenderCardsDifficulty() {\r\n        const card = `\r\n      <div class=\"card-words active-difficulty\">\r\n        <button class=\"icon-info-stat active-hidden\" title=\"Прогресс изучения\"></button>\r\n        <div class=\"info-message active-hidden\">\r\n          <div class=\"info-block-text\">\r\n            <h4 class=\"info-message-title\">Ответы в играх</h4>\r\n            <p>Правильных ответов: <span class=\"correct-answer\">${this.userWord !== undefined ? this.userWord.optional.gamesAnswer.correct : 0}</span></p>\r\n            <p>Не правильных ответов: <span class=\"wrong-answer\">${this.userWord !== undefined ? this.userWord.optional.gamesAnswer.wrong : 0}</span></p>\r\n          </div>\r\n        </div>\r\n        <img class=\"card-words-img\" src=\"https://rslang-bak.herokuapp.com/${this.image}\" alt=\"${this.wordTranslate}\"></img>\r\n        <p class=\"word\">${this.word}</p>\r\n        <div class=\"block-words\">\r\n          <p class=\"word-translate\">${this.wordTranslate}</p>\r\n          <p class=\"word-transcription\">${this.transcription}</p>\r\n          <button class=\"icon-audio\" data-source=\"${this.audio}\"></button>\r\n        </div>\r\n        <div class=\"block-example\">\r\n          <h3 class=\"h3\">Значение</h3>\r\n          <p>${this.textMeaning}</p>\r\n          <p>${this.textMeaningTranslate}</p>\r\n          <h3 class=\"h3\">Пример</h3>\r\n          <p>${this.textExample}</p>\r\n          <p>${this.textExampleTranslate}</p>\r\n        </div>\r\n        <div class=\"block-btn active-hidden\">\r\n          <button class=\"button-add-difficult active\" data-idword=\"${this.id}\">Сложное</button>\r\n          <button class=\"button-study-word\" data-idword=\"${this.id}\">Изученное</button>\r\n        </div>\r\n      </div>\r\n    `;\r\n        this.wrapperCardWords.insertAdjacentHTML('beforeend', card);\r\n    }\r\n    renderCardsDifficultyPage() {\r\n        const card = `\r\n      <div class=\"card-words active-difficulty\">\r\n        <button class=\"icon-info-stat active-hidden\" title=\"Прогресс изучения\"></button>\r\n        <div class=\"info-message active-hidden\">\r\n          <div class=\"info-block-text\">\r\n            <h4 class=\"info-message-title\">Ответы в играх</h4>\r\n            <p>Правильных ответов: <span class=\"correct-answer\">${this.userWord !== undefined ? this.userWord.optional.gamesAnswer.correct : 0}</span></p>\r\n            <p>Не правильных ответов: <span class=\"wrong-answer\">${this.userWord !== undefined ? this.userWord.optional.gamesAnswer.wrong : 0}</span></p>\r\n          </div>\r\n        </div>\r\n        <img class=\"card-words-img\" src=\"https://rslang-bak.herokuapp.com/${this.image}\" alt=\"${this.wordTranslate}\"></img>\r\n        <p class=\"word\">${this.word}</p>\r\n        <div class=\"block-words\">\r\n          <p class=\"word-translate\">${this.wordTranslate}</p>\r\n          <p class=\"word-transcription\">${this.transcription}</p>\r\n          <button class=\"icon-audio\" data-source=\"${this.audio}\"></button>\r\n        </div>\r\n        <div class=\"block-example\">\r\n          <h3 class=\"h3\">Значение</h3>\r\n          <p>${this.textMeaning}</p>\r\n          <p>${this.textMeaningTranslate}</p>\r\n          <h3 class=\"h3\">Пример</h3>\r\n          <p>${this.textExample}</p>\r\n          <p>${this.textExampleTranslate}</p>\r\n        </div>\r\n        <div class=\"block-btn\">\r\n          <button class=\"button-delete-difficult active\" data-idword=\"${this.id}\">Удалить</button>\r\n        </div>\r\n      </div>\r\n    `;\r\n        this.wrapperCardWordsDifficult.insertAdjacentHTML('beforeend', card);\r\n    }\r\n    createAndRenderCardsLearned() {\r\n        const card = `\r\n      <div class=\"card-words active-learnt\">\r\n        <button class=\"icon-info-stat active-hidden\" title=\"Прогресс изучения\"></button>\r\n        <div class=\"info-message active-hidden\">\r\n          <div class=\"info-block-text\">\r\n            <h4 class=\"info-message-title\">Ответы в играх</h4>\r\n            <p>Правильных ответов: <span class=\"correct-answer\">${this.userWord !== undefined ? this.userWord.optional.gamesAnswer.correct : 0}</span></p>\r\n            <p>Не правильных ответов: <span class=\"wrong-answer\">${this.userWord !== undefined ? this.userWord.optional.gamesAnswer.wrong : 0}</span></p>\r\n          </div>\r\n        </div>\r\n        <img class=\"card-words-img\" src=\"https://rslang-bak.herokuapp.com/${this.image}\" alt=\"${this.wordTranslate}\"></img>\r\n        <p class=\"word\">${this.word}</p>\r\n        <div class=\"block-words\">\r\n          <p class=\"word-translate\">${this.wordTranslate}</p>\r\n          <p class=\"word-transcription\">${this.transcription}</p>\r\n          <button class=\"icon-audio\" data-source=\"${this.audio}\"></button>\r\n        </div>\r\n        <div class=\"block-example\">\r\n          <h3 class=\"h3\">Значение</h3>\r\n          <p>${this.textMeaning}</p>\r\n          <p>${this.textMeaningTranslate}</p>\r\n          <h3 class=\"h3\">Пример</h3>\r\n          <p>${this.textExample}</p>\r\n          <p>${this.textExampleTranslate}</p>\r\n        </div>\r\n        <div class=\"block-btn active-hidden\">\r\n          <button class=\"button-add-difficult\" data-idword=\"${this.id}\">Сложное</button>\r\n          <button class=\"button-study-word active\" data-idword=\"${this.id}\">Изученное</button>\r\n        </div>\r\n      </div>\r\n    `;\r\n        this.wrapperCardWords.insertAdjacentHTML('beforeend', card);\r\n    }\r\n    renderCardsLearnedPage() {\r\n        const card = `\r\n      <div class=\"card-words active-learnt\">\r\n        <button class=\"icon-info-stat active-hidden\" title=\"Прогресс изучения\"></button>\r\n        <div class=\"info-message active-hidden\">\r\n          <div class=\"info-block-text\">\r\n            <h4 class=\"info-message-title\">Ответы в играх</h4>\r\n            <p>Правильных ответов: <span class=\"correct-answer\">${this.userWord !== undefined ? this.userWord.optional.gamesAnswer.correct : 0}</span></p>\r\n            <p>Не правильных ответов: <span class=\"wrong-answer\">${this.userWord !== undefined ? this.userWord.optional.gamesAnswer.wrong : 0}</span></p>\r\n          </div>\r\n        </div>\r\n        <img class=\"card-words-img\" src=\"https://rslang-bak.herokuapp.com/${this.image}\" alt=\"${this.wordTranslate}\"></img>\r\n        <p class=\"word\">${this.word}</p>\r\n        <div class=\"block-words\">\r\n          <p class=\"word-translate\">${this.wordTranslate}</p>\r\n          <p class=\"word-transcription\">${this.transcription}</p>\r\n          <button class=\"icon-audio\" data-source=\"${this.audio}\"></button>\r\n        </div>\r\n        <div class=\"block-example\">\r\n          <h3 class=\"h3\">Значение</h3>\r\n          <p>${this.textMeaning}</p>\r\n          <p>${this.textMeaningTranslate}</p>\r\n          <h3 class=\"h3\">Пример</h3>\r\n          <p>${this.textExample}</p>\r\n          <p>${this.textExampleTranslate}</p>\r\n        </div>\r\n        <div class=\"block-btn\">\r\n          <button class=\"button-delete-study active\" data-idword=\"${this.id}\">Удалить</button>\r\n        </div>\r\n      </div>\r\n    `;\r\n        this.wrapperCardWordsDifficult.insertAdjacentHTML('beforeend', card);\r\n    }\r\n}\r\nexport default CreateCard;\r\n","import RequestsApi from '../requestsApi';\r\nimport { storeUserInfo, storage } from '../../controller/storage';\r\nimport CreateCard from '../../view/createCardsWords';\r\nimport Paginator from '../../view/pagination';\r\nimport PreloaderPage from './preloader';\r\nconst api = new RequestsApi();\r\nconst preloaderPage = new PreloaderPage();\r\nclass Utils {\r\n    async getCardsWords(group, page) {\r\n        preloaderPage.showPreloaderPage();\r\n        document.querySelector('.wrapper-card-words').innerHTML = '';\r\n        Object.values(await api.getTextbookWords(group, page)).forEach((item) => {\r\n            const createCards = new CreateCard(item.id, item.image, item.word, item.wordTranslate, item.transcription, item.audio, item.textMeaning, item.textMeaningTranslate, item.textExample, item.textExampleTranslate);\r\n            createCards.createAndRenderCards();\r\n        });\r\n    }\r\n    async getCardsWordsSignupUser(storeUser, storeGeneral) {\r\n        preloaderPage.showPreloaderPage();\r\n        document.querySelector('.wrapper-card-words').innerHTML = '';\r\n        Object.values(await api.getTextbookWordsSignupUser(storeUser, storeGeneral))\r\n            .map((item) => item.paginatedResults)\r\n            .flat()\r\n            .forEach((el) => {\r\n            const createCards = new CreateCard(el._id, el.image, el.word, el.wordTranslate, el.transcription, el.audio, el.textMeaning, el.textMeaningTranslate, el.textExample, el.textExampleTranslate, el.userWord);\r\n            if (el.userWord) {\r\n                switch (el.userWord.difficulty) {\r\n                    case 'normal':\r\n                        createCards.createAndRenderCards();\r\n                        break;\r\n                    case 'hard':\r\n                        createCards.createAndRenderCardsDifficulty();\r\n                        break;\r\n                    case 'easy':\r\n                        createCards.createAndRenderCardsLearned();\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                createCards.createAndRenderCards();\r\n            }\r\n        });\r\n    }\r\n    async getAllDifficultyCardsWords(storeUser) {\r\n        preloaderPage.showPreloaderPage();\r\n        document.querySelector('.wrapper-card-words-difficult').innerHTML = '';\r\n        Object.values(await api.getDifficultWordsSignupUser(storeUser))\r\n            .map((item) => item.paginatedResults)\r\n            .flat()\r\n            .forEach((el) => {\r\n            const createCardsDifficulty = new CreateCard(el._id, el.image, el.word, el.wordTranslate, el.transcription, el.audio, el.textMeaning, el.textMeaningTranslate, el.textExample, el.textExampleTranslate, el.userWord);\r\n            createCardsDifficulty.renderCardsDifficultyPage();\r\n        });\r\n    }\r\n    async getAllLearnedCardsWords(storeUser) {\r\n        preloaderPage.showPreloaderPage();\r\n        document.querySelector('.wrapper-card-words-difficult').innerHTML = '';\r\n        Object.values(await api.getLearnedWordsSignupUser(storeUser))\r\n            .map((item) => item.paginatedResults)\r\n            .flat()\r\n            .forEach((el) => {\r\n            const createCardsDifficulty = new CreateCard(el._id, el.image, el.word, el.wordTranslate, el.transcription, el.audio, el.textMeaning, el.textMeaningTranslate, el.textExample, el.textExampleTranslate, el.userWord);\r\n            createCardsDifficulty.renderCardsLearnedPage();\r\n        });\r\n    }\r\n    getPaginationCards(pageWords, allPageWords = 30, parentElement = document.querySelector('.pagination-textbook')) {\r\n        parentElement.innerHTML = '';\r\n        const paginator = new Paginator(pageWords + 1, allPageWords, parentElement);\r\n        paginator.renderPagination();\r\n    }\r\n    async outputWordsAndPagination() {\r\n        localStorage.setItem('general-info', JSON.stringify(storage));\r\n        if (storage.isSignupUser) {\r\n            await this.getCardsWordsSignupUser(storeUserInfo, storage);\r\n        }\r\n        else {\r\n            await this.getCardsWords(storage.groupWords, storage.pageWords);\r\n        }\r\n        this.getPaginationCards(storage.pageWords);\r\n        this.isAllLearnedWordAndDifficulty();\r\n    }\r\n    toggleDisableArrowPagination() {\r\n        const nextArrow = document.querySelector('.next-arrow');\r\n        const prevArrow = document.querySelector('.prev-arrow');\r\n        switch (storage.pageWords) {\r\n            case 29:\r\n                nextArrow.disabled = true;\r\n                break;\r\n            case 0:\r\n                prevArrow.disabled = true;\r\n                break;\r\n            default:\r\n                nextArrow.disabled = false;\r\n                prevArrow.disabled = false;\r\n                break;\r\n        }\r\n    }\r\n    isEmptyDifficultyWords() {\r\n        const wrapperCardWordsDifficult = document.querySelector('.wrapper-card-words-difficult');\r\n        if (!wrapperCardWordsDifficult.firstChild) {\r\n            const blockMessageEmpty = '<div class=\"empty-block\"><p class=\"empty-message\">Пока в этой категории ничего нет.</p></div>';\r\n            wrapperCardWordsDifficult.insertAdjacentHTML('beforeend', blockMessageEmpty);\r\n        }\r\n    }\r\n    isAllLearnedWordAndDifficulty() {\r\n        if (storage.isSignupUser) {\r\n            const cardWords = document.querySelectorAll('.card-words');\r\n            const main = document.querySelector('.main');\r\n            const btnPagination = document.querySelector('.btn-pagination');\r\n            const gameCard = document.querySelectorAll('.game-card');\r\n            let count = 0;\r\n            for (const element of cardWords) {\r\n                if (element.classList.contains('active-learnt') || element.classList.contains('active-difficulty')) {\r\n                    count++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            if (count === 20) {\r\n                main.classList.add('active-study');\r\n                btnPagination.classList.add('active-study');\r\n                gameCard.forEach((item) => item.classList.add('active-disabled'));\r\n            }\r\n            else {\r\n                main.classList.remove('active-study');\r\n                btnPagination.classList.remove('active-study');\r\n                gameCard.forEach((item) => item.classList.remove('active-disabled'));\r\n            }\r\n        }\r\n    }\r\n    removeClassActiveFromMain() {\r\n        const main = document.querySelector('.main');\r\n        main.classList.remove('active-study');\r\n        if (storage.currentPage === 'textbook') {\r\n            const btnPagination = document.querySelector('.btn-pagination');\r\n            const gameCard = document.querySelectorAll('.game-card');\r\n            btnPagination.classList.remove('active-study');\r\n            gameCard.forEach((item) => item.classList.remove('active-disabled'));\r\n        }\r\n    }\r\n    disabledLinkFromDifficultPage() {\r\n        const linkStudyWord = document.querySelector('.link-study-word');\r\n        const backToDifficult = document.querySelector('.back-to-difficult');\r\n        linkStudyWord.setAttribute('disabled', 'disabled');\r\n        backToDifficult.removeAttribute('disabled');\r\n    }\r\n    updateStorageUserInfo() {\r\n        const { name, token, refreshToken, userId, message } = JSON.parse(localStorage.getItem('user-info'));\r\n        storeUserInfo.name = name;\r\n        storeUserInfo.message = message;\r\n        storeUserInfo.token = token;\r\n        storeUserInfo.refreshToken = refreshToken;\r\n        storeUserInfo.userId = userId;\r\n    }\r\n    updateStorageGeneralInfo() {\r\n        const { currentPage, groupWords, pageWords, isSignupUser, wordId } = JSON.parse(localStorage.getItem('general-info'));\r\n        storage.currentPage = currentPage;\r\n        storage.groupWords = groupWords;\r\n        storage.pageWords = pageWords;\r\n        storage.isSignupUser = isSignupUser;\r\n        storage.wordId = wordId;\r\n    }\r\n    async conditionLoadWords() {\r\n        if (storage.isSignupUser && storage.currentPage === 'textbook') {\r\n            await this.getCardsWordsSignupUser(storeUserInfo, storage);\r\n        }\r\n        if (!storage.isSignupUser && storage.currentPage === 'textbook') {\r\n            await this.getCardsWords(storage.groupWords, storage.pageWords);\r\n        }\r\n    }\r\n    signupUser() {\r\n        storage.isSignupUser = true;\r\n        localStorage.setItem('general-info', JSON.stringify(storage));\r\n        const menuListItem = document.querySelectorAll('.menu-list-item');\r\n        menuListItem.forEach((item) => item.classList.remove('active-hidden'));\r\n        this.showHideBtnDifficulty();\r\n        if (storage.currentPage === 'textbook') {\r\n            const difficultWords = document.querySelector('.difficult-words');\r\n            difficultWords.classList.remove('active-hidden');\r\n        }\r\n    }\r\n    notSignupUser() {\r\n        storage.isSignupUser = false;\r\n        localStorage.setItem('general-info', JSON.stringify(storage));\r\n        const menuListItemDifficulty = document.querySelector('.menu-list-item-difficulty');\r\n        menuListItemDifficulty.classList.add('active-hidden');\r\n        const menuListItemStatistic = document.querySelector('.menu-list-item-statistic');\r\n        menuListItemStatistic.classList.add('active-hidden');\r\n        this.showHideBtnDifficulty();\r\n        if (storage.currentPage === 'textbook') {\r\n            const difficultWords = document.querySelector('.difficult-words');\r\n            difficultWords.classList.add('active-hidden');\r\n        }\r\n    }\r\n    showHideBtnDifficulty() {\r\n        const blockBtnDifficulty = document.querySelectorAll('.block-btn');\r\n        if (storage.isSignupUser) {\r\n            blockBtnDifficulty.forEach((item) => item.classList.remove('active-hidden'));\r\n        }\r\n        else {\r\n            blockBtnDifficulty.forEach((item) => item.classList.add('active-hidden'));\r\n        }\r\n        this.showHideBtnIconInfoStat();\r\n    }\r\n    showHideBtnIconInfoStat() {\r\n        const iconInfoStat = document.querySelectorAll('.icon-info-stat');\r\n        if (storage.isSignupUser) {\r\n            iconInfoStat.forEach((item) => item.classList.remove('active-hidden'));\r\n        }\r\n        else {\r\n            iconInfoStat.forEach((item) => item.classList.add('active-hidden'));\r\n        }\r\n    }\r\n    showHideSectionDifficulty() {\r\n        const difficultWords = document.querySelector('.difficult-words');\r\n        if (storage.isSignupUser) {\r\n            difficultWords.classList.remove('active-hidden');\r\n        }\r\n        else {\r\n            difficultWords.classList.add('active-hidden');\r\n        }\r\n    }\r\n    activeLevelWords() {\r\n        const levelWords = document.querySelectorAll('.levels-item');\r\n        levelWords.forEach((item) => {\r\n            if (Number(item.dataset.group) === storage.groupWords) {\r\n                item.classList.add('active');\r\n            }\r\n            else {\r\n                item.classList.remove('active');\r\n            }\r\n        });\r\n    }\r\n}\r\nexport default Utils;\r\n","class Paginator {\r\n    constructor(current, all, parentElement) {\r\n        this.current = current;\r\n        this.all = all;\r\n        this.parentElement = parentElement;\r\n    }\r\n    renderNumberPage(pageNum) {\r\n        const button = document.createElement('button');\r\n        button.setAttribute('data-page', `${pageNum - 1}`);\r\n        button.textContent = `${pageNum}`;\r\n        if (pageNum === this.current) {\r\n            button.classList.add('current');\r\n        }\r\n        button.classList.add('btn-pagination');\r\n        this.parentElement.append(button);\r\n    }\r\n    renderLinkPagination(pageNum) {\r\n        const button = document.createElement('button');\r\n        switch (pageNum) {\r\n            case 1:\r\n                button.innerHTML = '<i class=\"fas fa-angle-left\"></i>';\r\n                button.classList.add('prev-arrow');\r\n                this.parentElement.append(button);\r\n                this.renderNumberPage(pageNum);\r\n                break;\r\n            case this.all:\r\n                this.renderNumberPage(pageNum);\r\n                button.innerHTML = '<i class=\"fas fa-angle-right\"></i>';\r\n                button.classList.add('next-arrow');\r\n                this.parentElement.append(button);\r\n                break;\r\n            default:\r\n                this.renderNumberPage(pageNum);\r\n                break;\r\n        }\r\n    }\r\n    renderDotsPagination() {\r\n        const span = document.createElement('span');\r\n        span.classList.add('rest-page');\r\n        span.innerHTML = '...';\r\n        this.parentElement.append(span);\r\n    }\r\n    renderPagination() {\r\n        if (this.all === 1) {\r\n            return;\r\n        }\r\n        const links = [1, this.all];\r\n        for (let i = this.current - 2; i <= this.current + 2; i++) {\r\n            if (i < 1 || i > this.all) {\r\n                continue;\r\n            }\r\n            links.push(i);\r\n        }\r\n        const uniqLinks = [...new Set(links)];\r\n        uniqLinks.sort((a, b) => a - b);\r\n        for (let i = 0; i < uniqLinks.length; i++) {\r\n            this.renderLinkPagination(uniqLinks[i]);\r\n            if ((i + 1) < uniqLinks.length && (uniqLinks[i] + 1 !== uniqLinks[i + 1])) {\r\n                this.renderDotsPagination();\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default Paginator;\r\n","import { storeUserInfo, storage } from '../controller/storage';\r\nimport PreloaderPage from './components/preloader';\r\nconst preloaderPage = new PreloaderPage();\r\nclass RequestsApi {\r\n    constructor() {\r\n        this.base = 'https://rslang-bak.herokuapp.com';\r\n        this.users = `${this.base}/users`;\r\n        this.signin = `${this.base}/signin`;\r\n        this.words = `${this.base}/words`;\r\n    }\r\n    async createUser(user) {\r\n        const messageError = document.querySelector('.message-error');\r\n        const response = await fetch(`${this.users}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(user),\r\n        });\r\n        if (response.status === 417) {\r\n            messageError.textContent = 'Пользователь с таким e-mail уже существует! Введите другой e-mail.';\r\n            messageError.style.display = 'block';\r\n        }\r\n        const content = await response.json();\r\n        return content;\r\n    }\r\n    async loginUser({ email, password }) {\r\n        const messageErrorSignin = document.querySelector('.message-error-signin');\r\n        const response = await fetch(`${this.signin}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ email, password }),\r\n        });\r\n        switch (response.status) {\r\n            case 404:\r\n                messageErrorSignin.textContent = 'Не удалось найти пользователя! Проверьте логин и пароль.';\r\n                messageErrorSignin.style.display = 'block';\r\n                break;\r\n            case 403:\r\n                messageErrorSignin.textContent = 'Не верный пароль! Попробуйте еще раз.';\r\n                messageErrorSignin.style.display = 'block';\r\n                break;\r\n        }\r\n        const content = await response.json();\r\n        localStorage.setItem('user-info', JSON.stringify(content));\r\n    }\r\n    async getNewUserToken({ userId, refreshToken }) {\r\n        const response = await fetch(`${this.users}/${userId}/tokens`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${refreshToken}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n        const content = await response.json();\r\n        storeUserInfo.token = content.token;\r\n        storeUserInfo.refreshToken = content.refreshToken;\r\n        localStorage.setItem('user-info', JSON.stringify(storeUserInfo));\r\n    }\r\n    async getUser({ userId, token }) {\r\n        const response = await fetch(`${this.users}/${userId}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n        const content = await response.json();\r\n        return content;\r\n    }\r\n    async getTextbookWords(group, page) {\r\n        const response = await fetch(`${this.words}?group=${group}&page=${page}`);\r\n        if (storage.currentPage === 'textbook') {\r\n            if (response.ok) {\r\n                preloaderPage.hidePreloaderPage();\r\n            }\r\n        }\r\n        const content = await response.json();\r\n        return content;\r\n    }\r\n    async getGameWord({ userId, token }, wordId) {\r\n        const response = await fetch(`${this.users}/${userId}/words/${wordId}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n        const content = await response.json();\r\n        return content;\r\n    }\r\n    async updateGameWords({ userId, token }, { correct, wrong }, difficultyWord, wordId) {\r\n        const response = await fetch(`${this.users}/${userId}/words/${wordId}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                difficulty: difficultyWord,\r\n                optional: { gamesAnswer: { correct: correct, wrong: wrong } },\r\n            }),\r\n        });\r\n        const content = await response.json();\r\n        return content;\r\n    }\r\n    async createGameWords({ userId, token }, { correct, wrong }, difficultyWord, wordId) {\r\n        const response = await fetch(`${this.users}/${userId}/words/${wordId}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                difficulty: difficultyWord,\r\n                optional: { gamesAnswer: { correct: correct, wrong: wrong } },\r\n            }),\r\n        });\r\n        const content = await response.json();\r\n        return content;\r\n    }\r\n    async getWord({ userId, token }, { wordId }) {\r\n        const response = await fetch(`${this.users}/${userId}/words/${wordId}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n        const content = await response.json();\r\n        return content;\r\n    }\r\n    async createWordsDifficulty({ userId, token }, { wordId }, { correct, wrong }, levelWord) {\r\n        const response = await fetch(`${this.users}/${userId}/words/${wordId}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                difficulty: levelWord,\r\n                optional: { gamesAnswer: { correct: correct, wrong: wrong } },\r\n            }),\r\n        });\r\n        const content = await response.json();\r\n        return content;\r\n    }\r\n    async updateWordsDifficulty({ userId, token }, { wordId }, { correct, wrong }, levelWord) {\r\n        const response = await fetch(`${this.users}/${userId}/words/${wordId}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                difficulty: levelWord,\r\n                optional: { gamesAnswer: { correct: correct, wrong: wrong } },\r\n            }),\r\n        });\r\n        const content = await response.json();\r\n        return content;\r\n    }\r\n    async getTextbookWordsSignupUser({ userId, token }, { groupWords, pageWords }) {\r\n        const response = await fetch(`${this.users}/${userId}/aggregatedWords?wordsPerPage=20&filter={\"$and\":[{\"group\":${groupWords}},{\"page\":${pageWords}}]}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n        if (storage.currentPage === 'textbook') {\r\n            if (response.ok) {\r\n                preloaderPage.hidePreloaderPage();\r\n            }\r\n        }\r\n        const content = await response.json();\r\n        return content;\r\n    }\r\n    async getGameTextbookWordsSignupUser({ userId, token }, { groupWords, pageWords }) {\r\n        const response = await fetch(`${this.users}/${userId}/aggregatedWords?group=${groupWords}&wordsPerPage=20&filter={\"$and\":[{\"$or\":[{\"userWord.difficulty\":\"hard\"},{\"userWord.difficulty\":\"normal\"},{\"userWord\":null}]},{\"page\":${pageWords}}]}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n        if (storage.currentPage === 'textbook') {\r\n            if (response.ok) {\r\n                preloaderPage.hidePreloaderPage();\r\n            }\r\n        }\r\n        const content = await response.json();\r\n        return content;\r\n    }\r\n    async getDifficultWordsSignupUser({ userId, token }) {\r\n        const response = await fetch(`${this.users}/${userId}/aggregatedWords?wordsPerPage=3600&filter={\"userWord.difficulty\":\"hard\"}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n        if (response.ok) {\r\n            preloaderPage.hidePreloaderPage();\r\n        }\r\n        const content = await response.json();\r\n        return content;\r\n    }\r\n    async getLearnedWordsSignupUser({ userId, token }) {\r\n        const response = await fetch(`${this.users}/${userId}/aggregatedWords?wordsPerPage=3600&filter={\"userWord.difficulty\":\"easy\"}`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n        if (response.ok) {\r\n            preloaderPage.hidePreloaderPage();\r\n        }\r\n        const content = await response.json();\r\n        return content;\r\n    }\r\n    async getStatistic({ userId, token }) {\r\n        const response = await fetch(`${this.users}/${userId}/statistics`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n        const content = await response.json();\r\n        return content;\r\n    }\r\n    async updateStatistic({ userId, token }, statistic) {\r\n        const response = await fetch(`${this.users}/${userId}/statistics`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                learnedWords: 0,\r\n                optional: Object.assign({}, statistic),\r\n            }),\r\n        });\r\n        const content = await response.json();\r\n        return content;\r\n    }\r\n}\r\nexport default RequestsApi;\r\n","class RenderView {\r\n    renderHomePage() {\r\n        return `\r\n      <div class=\"wrapper-home\">\r\n        <div class=\"main-align-center\">\r\n          <h1 class=\"h1\">RS Lang</h1>\r\n          <div class=\"title-composition\"></div>\r\n          <button class=\"button btn-details\">Подробнее</button>\r\n        </div>\r\n      </div>\r\n    `;\r\n    }\r\n    renderLogOut(name) {\r\n        return `\r\n      <p class=\"text-hello\">Привет, <span>${name}</span></p>\r\n      <div class=\"avatar-img\"><i class=\"fas fa-user-circle\"></i></div>\r\n      <button class=\"log-out\"><i class=\"fas fa-sign-out-alt\"></i></button>\r\n    `;\r\n    }\r\n    renderLevelsWords() {\r\n        return `\r\n      <div class=\"difficulty-levels-words\">\r\n        <div class=\"levels-item item-1\" data-group=\"0\">1 (A1)</div>\r\n        <div class=\"levels-item item-2\" data-group=\"1\">2 (A2)</div>\r\n        <div class=\"levels-item item-3\" data-group=\"2\">3 (B1)</div>\r\n        <div class=\"levels-item item-4\" data-group=\"3\">4 (B2)</div>\r\n        <div class=\"levels-item item-5\" data-group=\"4\">5 (C1)</div>\r\n        <div class=\"levels-item item-6\" data-group=\"5\">6 (C2)</div>\r\n      </div>\r\n    `;\r\n    }\r\n    renderTextbook() {\r\n        return `\r\n      <div class=\"preloader-page\"><div class=\"pulse\"></div></div>\r\n      <div class=\"wrapper-textbook\">\r\n        <div class=\"textbook-content\">\r\n          <h2 class=\"textbook-title\">Учебник</h2>\r\n          <p class=\"title-levels-words\">Уровни сложности слов</p>\r\n          ${this.renderLevelsWords()}\r\n          <div class=\"difficult-words active-hidden\">Сложные слова</div>\r\n          <div class=\"wrapper-card-words\">\r\n          \r\n          </div>\r\n          <div class=\"pagination-textbook\"></div>\r\n          <div class=\"games-block\">\r\n            <h2 class=\"game-title\">Игры</h2>\r\n            <div class=\"games-wrapper\">\r\n              <div class=\"game-card game-card-sprint\">\r\n                <h4 class=\"game-name\">Спринт</h4>\r\n                <div class=\"game-img game-icon-sprint\"></div>\r\n                <p class=\"discription-game\">Игра на время. Определи верный перевод слова или нет.</p>\r\n              </div>\r\n              <div class=\"game-card game-card-audio-call\">\r\n                <h4 class=\"game-name\">Аудиовызов</h4>\r\n                <div class=\"game-img game-icon-audio\"></div>\r\n                <p class=\"discription-game\">Попробуй понять, какое слово было произнесено.</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n    }\r\n    renderDifficultyPage() {\r\n        return `\r\n      <div class=\"preloader-page\"><div class=\"pulse\"></div></div>\r\n      <div class=\"wrapper-difficult-words\">\r\n        <div class=\"nav-difficult-words\">\r\n          <button href=\"\" class=\"back-to-textbook\"><i class=\"fas fa-arrow-left\"></i> назад в учебник</button>\r\n          <button href=\"\" class=\"back-to-difficult\" disabled>Сложные слова</button>\r\n          <button href=\"\" class=\"link-study-word\">Изученные слова</button>\r\n        </div>\r\n        <div class=\"wrapper-card-words-difficult\">\r\n          \r\n        </div>\r\n        <div class=\"games-block\">\r\n          <h2 class=\"game-title\">Игры</h2>\r\n          <div class=\"games-wrapper\">\r\n            <div class=\"game-card game-card-sprint\">\r\n              <h4 class=\"game-name\">Спринт</h4>\r\n              <div class=\"game-img game-icon-sprint\"></div>\r\n              <p class=\"discription-game\">Игра на время. Определи верный перевод слова или нет.</p>\r\n            </div>\r\n            <div class=\"game-card game-card-audio-call\">\r\n              <h4 class=\"game-name\">Аудиовызов</h4>\r\n              <div class=\"game-img game-icon-audio\"></div>\r\n              <p class=\"discription-game\">Попробуй понять, какое слово было произнесено.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n    }\r\n    renderGameSprint() {\r\n        return `\r\n      <div class=\"popup-game-level active-hidden\">\r\n        <div class=\"block-description-game\">\r\n          <h2 class=\"title-game-audio-call\">Спринт</h2>\r\n          <p class=\"description-game-audio\">Игра Спринт учит быстро переводить слова.</p>\r\n        </div>\r\n        <details class=\"description-keyboard\">\r\n          <summary>Управление на клавиатуре</summary>\r\n          <p><button>F</button> - полноэкранный режим</p>\r\n          <p><button><i class=\"fas fa-arrow-left\"></i></button> - ответить неверно</p>\r\n          <p><button><i class=\"fas fa-arrow-right\"></i></button> - ответить верно</p>\r\n        </details>\r\n        <p class=\"selection-title-game\">Выберите сложность игры</p>\r\n        <div class=\"levels-game\">\r\n          <div class=\"levels-game-item item-1\" data-group=\"0\">1 (A1)</div>\r\n          <div class=\"levels-game-item item-2\" data-group=\"1\">2 (A2)</div>\r\n          <div class=\"levels-game-item item-3\" data-group=\"2\">3 (B1)</div>\r\n          <div class=\"levels-game-item item-4\" data-group=\"3\">4 (B2)</div>\r\n          <div class=\"levels-game-item item-5\" data-group=\"4\">5 (C1)</div>\r\n          <div class=\"levels-game-item item-6\" data-group=\"5\">6 (C2)</div>\r\n        </div>\r\n        <div class=\"block-button-popap-game\">\r\n          <button class=\"btn-cancel\">Выйти</button>\r\n          <button class=\"btn-start\" title=\"Выберите сложность\" disabled>Начать</button>\r\n        </div>\r\n      </div>\r\n    `;\r\n    }\r\n    renderGameAudioCall() {\r\n        return `\r\n      <div class=\"popup-game-level active-hidden\">\r\n        <div class=\"block-description-game\">\r\n          <h2 class=\"title-game-audio-call\">Аудиовызов</h2>\r\n          <p class=\"description-game-audio\">Игра Аудиовызов улучшает твое восприятие речи на слух.</p>\r\n        </div>\r\n        <details class=\"description-keyboard\">\r\n          <summary>Управление на клавиатуре</summary>\r\n          <p><button>F</button> - полноэкранный режим</p>\r\n          <p><button>SPACE</button> - не знаю</p>\r\n          <p><button>ENTER</button> - далее</p>\r\n          <p><button>1,2,3,4,5</button> - варианты ответов</p>\r\n        </details>\r\n        <p class=\"selection-title-game\">Выберите сложность игры</p>\r\n        <div class=\"levels-game\">\r\n          <div class=\"levels-game-item item-1\" data-group=\"0\">1 (A1)</div>\r\n          <div class=\"levels-game-item item-2\" data-group=\"1\">2 (A2)</div>\r\n          <div class=\"levels-game-item item-3\" data-group=\"2\">3 (B1)</div>\r\n          <div class=\"levels-game-item item-4\" data-group=\"3\">4 (B2)</div>\r\n          <div class=\"levels-game-item item-5\" data-group=\"4\">5 (C1)</div>\r\n          <div class=\"levels-game-item item-6\" data-group=\"5\">6 (C2)</div>\r\n        </div>\r\n        <div class=\"block-button-popap-game\">\r\n          <button class=\"btn-cancel\">Выйти</button>\r\n          <button class=\"btn-start\" title=\"Выберите сложность\" disabled>Начать</button>\r\n        </div>\r\n      </div>\r\n    `;\r\n    }\r\n    renderGameAudioCallFromTextbook() {\r\n        return `\r\n      <div class=\"popup-game-level active-hidden\">\r\n        <div class=\"block-description-game\">\r\n          <h2 class=\"title-game-audio-call\">Аудиовызов</h2>\r\n          <p class=\"description-game-audio\">Игра Аудиовызов улучшает твое восприятие речи на слух.</p>\r\n        </div>\r\n        <details class=\"description-keyboard\">\r\n          <summary>Управление на клавиатуре</summary>\r\n          <p><button>F</button> - полноэкранный режим</p>\r\n          <p><button>SPACE</button> - не знаю</p>\r\n          <p><button>ENTER</button> - далее</p>\r\n          <p><button>1,2,3,4,5</button> - варианты ответов</p>\r\n        </details>\r\n        <p class=\"selection-title-game\">Игра начнется с словами из текущей страницы учебника. Удачи!</p>\r\n        <div class=\"block-button-popap-game\">\r\n          <button class=\"btn-cancel\">Выйти</button>\r\n          <button class=\"btn-start\">Начать</button>\r\n        </div>\r\n      </div>\r\n    `;\r\n    }\r\n    renderGameSprintFromTextbook() {\r\n        return `\r\n      <div class=\"popup-game-level active-hidden\">\r\n        <div class=\"block-description-game\">\r\n          <h2 class=\"title-game-audio-call\">Спринт</h2>\r\n          <p class=\"description-game-audio\">Игра Спринт учит быстро переводить слова.</p>\r\n        </div>\r\n        <details class=\"description-keyboard\">\r\n          <summary>Управление на клавиатуре</summary>\r\n          <p><button>F</button> - полноэкранный режим</p>\r\n          <p><button><i class=\"fas fa-arrow-left\"></i></button> - ответить неверно</p>\r\n          <p><button><i class=\"fas fa-arrow-right\"></i></button> - ответить верно</p>\r\n        </details>\r\n        <p class=\"selection-title-game\">Игра начнется с словами из текущей страницы учебника. Удачи!</p>\r\n        <div class=\"block-button-popap-game\">\r\n          <button class=\"btn-cancel\">Выйти</button>\r\n          <button class=\"btn-start\">Начать</button>\r\n        </div>\r\n      </div>\r\n    `;\r\n    }\r\n    selectionRenderPage() {\r\n        if (localStorage.getItem('general-info')) {\r\n            const store = JSON.parse(localStorage.getItem('general-info'));\r\n            switch (store.currentPage) {\r\n                case 'home':\r\n                    return this.renderHomePage();\r\n                case 'textbook':\r\n                    return this.renderTextbook();\r\n            }\r\n        }\r\n        return this.renderHomePage();\r\n    }\r\n    async render() {\r\n        const html = `\r\n      <div class=\"preloader\"><div class=\"pulse\"></div></div>\r\n      <header class=\"header\">\r\n        <div class=\"menu-burger\">\r\n          <button class=\"menu-btn\">\r\n            <span></span>\r\n          </button>\r\n        </div>\r\n        <nav class=\"menu-header\">\r\n          <ul class=\"menu-list\">\r\n            <li class=\"menu-list-item\">\r\n              <a href=\"\" class=\"menu-link\" id=\"link-home\"><i class=\"fas fa-home\"></i>Главная</a>\r\n            </li>\r\n            <li class=\"menu-list-item\">\r\n              <a href=\"\" class=\"menu-link\" id=\"link-textbook\"><i class=\"fas fa-book-reader\"></i>Учебник</a>\r\n            </li>\r\n            <li class=\"menu-list-item menu-list-item-difficulty active-hidden\">\r\n              <a href=\"\" class=\"menu-link\" id=\"link-difficulty\"><i class=\"fas fa-book\"></i>Сложные слова</a>\r\n            </li>\r\n            <li class=\"menu-list-item\">\r\n              <a href=\"\" class=\"sub-menu-link menu-link\"><i class=\"fas fa-gamepad\"></i>Игры</a>\r\n              <ul class=\"submenu-list\">\r\n                <li class=\"submenu-list-item\"><a href=\"\" class=\"menu-link\" id=\"link-game-sprint\"><i class=\"fas fa-running\"></i>Спринт</a></li>\r\n                <li class=\"submenu-list-item\"><a href=\"\" class=\"menu-link\" id=\"link-game-audio\"><i class=\"fas fa-headphones-alt\"></i>Аудиовызов</a></li>\r\n              </ul>\r\n            </li>\r\n            <li class=\"menu-list-item menu-list-item-statistic active-hidden\">\r\n              <a href=\"\" class=\"menu-link\" id=\"link-statistic\"><i class=\"fas fa-trophy\"></i>Статистика</a>\r\n            </li>\r\n            <li class=\"menu-list-item\">\r\n              <a href=\"\" class=\"menu-link\" id=\"link-team\"><i class=\"fas fa-user-friends\"></i>О приложении</a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <h2 class=\"h2\"><a href=\"\" class=\"logo\">RS Lang</a></h2>\r\n        <button class=\"sign-in\"><i class=\"fas fa-sign-in-alt\"></i> Войти</button>\r\n        <div class=\"avatar-box\">\r\n          ${this.renderLogOut(' ')}\r\n        </div>\r\n      </header>\r\n      <main class=\"main\">\r\n        ${this.selectionRenderPage()}\r\n      </main>\r\n      <footer class=\"footer\">\r\n        <a href=\"https://rs.school/\" class=\"footer-logo\" target=\"_blank\"></a>\r\n        <a href=\"https://github.com/andru12388\" class=\"footer-git\" target=\"_blank\">Алисеев Андрей</a>\r\n        <p class=\"app-dev\">2022</p>\r\n      </footer>\r\n      <div class=\"top\" title=\"Up\">\r\n        <i class=\"fa fa-angle-double-up\"></i>\r\n      </div>\r\n      <div class=\"popup-sign-in\">\r\n        <div class=\"form-close-btn\"></div>\r\n        <form class=\"form-popap-registered\">\r\n          <p class=\"form-title\">Регистрация</p>\r\n          <div class=\"form-input-box\">\r\n            <input class=\"input enter-name\" type=\"text\" name=\"nameUser\" placeholder=\"Имя\" required>\r\n            <input class=\"input enter-email\" type=\"email\" name=\"email\" placeholder=\"E-mail\" title=\"Минимально корректный e-mail (q@e.ru)\" required>\r\n            <input class=\"input enter-password\" type=\"password\" name=\"password\" placeholder=\"Пароль (от 8 до 12 символов)\" minlength=\"8\" maxlength=\"12\" required>\r\n          </div>\r\n          <div class=\"message-error\"></div>\r\n          <button class=\"button-form btn-reg\" type=\"submit\">Зарегистрироваться</button>\r\n          <div class=\"form-answer-box\">\r\n            <p>У вас есть аккаунт?</p>\r\n            <a href=\"\" class=\"link-to-signup\">Войти</a>\r\n          </div>\r\n        </form>\r\n\r\n        <form class=\"form-popap-signup\">\r\n          <p class=\"form-title\">Вход</p>\r\n          <div class=\"form-input-box\">\r\n            <input class=\"input enter-email\" type=\"email\" name=\"email\" placeholder=\"E-mail\" title=\"Минимально корректный e-mail (q@e.ru)\" required>\r\n            <input class=\"input enter-password\" type=\"password\" name=\"password\" placeholder=\"Пароль (от 8 до 12 символов)\" minlength=\"8\" maxlength=\"12\" required>\r\n          </div>\r\n          <div class=\"message-error-signin\"></div>\r\n          <button class=\"button-form btn-sign\" type=\"submit\">Войти</button>\r\n          <div class=\"form-answer-box\">\r\n            <p>У вас нет аккаунта?</p>\r\n            <a href=\"\" class=\"link-to-registered\">Зарегистрироваться</a>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"popup-about\">\r\n        <div class=\"about-close-btn\"></div>\r\n        <h2 class=\"popup-title\">Оцените преимущества приложения</h2>\r\n        <div class=\"popap-block-card\">\r\n          <div class=\"popup-about-card\">\r\n            <div class=\"popap-card-img img-textbook\"></div>\r\n            <h4 class=\"popap-title-card\">Учебник</h4>\r\n            <p class=\"popap-description-card\">Библиотека из 3600 часто встречающихся слов в повседневной жизни. Изучай в своем темпе!</p>\r\n          </div>\r\n          <div class=\"popup-about-card\">\r\n            <div class=\"popap-card-img img-difficulty\"></div>\r\n            <h4 class=\"popap-title-card\">Сложные слова</h4>\r\n            <p class=\"popap-description-card\">Для лучшего запонимания сложных слов отмечай их и повторяй отдельно. Создай свой персональный словарь для изучения слов!</p>\r\n          </div>\r\n          <div class=\"popup-about-card\">\r\n            <div class=\"popap-card-img img-games\"></div>\r\n            <h4 class=\"popap-title-card\">Игры</h4>\r\n            <p class=\"popap-description-card\">2 разные игры помогают учить без скуки с результатом. Аудиовызов - улучшает восприятие речи на слух. Спринт - учит быстро переводить слова.</p>\r\n          </div>\r\n          <div class=\"popup-about-card\">\r\n            <div class=\"popap-card-img img-statistic\"></div>\r\n            <h4 class=\"popap-title-card\">Статистика</h4>\r\n            <p class=\"popap-description-card\">Подробная статистика твоих достижений, изученных слов и ошибок. Ставь цели и вдохновляйся на новые достижения!</p>\r\n          </div>\r\n        </div>\r\n        <h2 class=\"popap-team\">Разработчик</h2>\r\n        <figure class=\"my-foto\">\r\n\t\t\t\t\t<img class=\"img-responsive\" src=\"./assets/img/Avatar.jpg\" alt=\"My photo\">\r\n\t\t\t\t</figure>\r\n        <a href=\"https://github.com/andru12388\" class=\"popap-git\" target=\"_blank\">Андрей</a>\r\n      </div>\r\n      <div class=\"popup-result-game active-hidden\">\r\n        <h4>Результат <span class=\"result-game-sprint\"></span></h4>\r\n        <div class=\"wrapper-result\">\r\n          <div class=\"box-bad-answer\">\r\n            <p class=\"wrong-result\">Ошибок <span class=\"number-wrong\"></span></p>\r\n            <div class=\"block-wrong\"></div>\r\n          </div>\r\n          <div class=\"box-nice-answer\">\r\n            <p class=\"correct-result\">Знаю <span class=\"number-correct\"></span></p>\r\n            <div class=\"block-correct\"></div>\r\n          </div>\r\n        </div>\r\n        <div class=\"box-btn-repeat-exit\">\r\n          <button class=\"button-repeat\">Еще раз</button>\r\n          <button class=\"button-exit\">Закончить игру</button>\r\n          <button class=\"button-repeat-from-textbook active-hidden\">Еще раз</button>\r\n          <button class=\"button-exit-from-textbook active-hidden\">Закончить игру</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"popup-statistic\">\r\n        <div class=\"statistic-close-btn\"></div>\r\n        <h3 class=\"title-statistic\">Краткосрочная статистика за сегодня</h3>\r\n        <div class=\"box-statistic game-sprint-statistic\">\r\n          <h4 class=\"title-games-stat title-sprint-stat\">Спринт</h4>\r\n          <ul>\r\n            <li>\r\n              <p class=\"text-statistic\">Всего новых слов: <span class=\"total-sprint-words\">0</span></p>\r\n            </li>\r\n            <li>\r\n              <p class=\"text-statistic\">Процент правильных ответов: <span class=\"percent-answer-sprint\">0%</span></p>\r\n            </li>\r\n            <li>\r\n              <p class=\"text-statistic\">Самая длинная серия правильных ответов: <span class=\"long-series-sprint\">0</span></p>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"box-statistic game-audio-statistic\">\r\n          <h4 class=\"title-games-stat title-audio-stat\">Аудиовызов</h4>\r\n          <ul>\r\n            <li>\r\n              <p class=\"text-statistic\">Всего новых слов: <span class=\"total-audio-words\">0</span></p>\r\n            </li>\r\n            <li>\r\n              <p class=\"text-statistic\">Процент правильных ответов: <span class=\"percent-answer-audio\">0%</span></p>\r\n            </li>\r\n            <li>\r\n              <p class=\"text-statistic\">Самая длинная серия правильных ответов: <span class=\"long-series-audio\">0</span></p>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"box-statistic all-words-statistic\">\r\n          <h4 class=\"title-games-stat title-audio-stat\">Статистика по словам</h4>\r\n          <ul>\r\n            <li>\r\n              <p class=\"text-statistic\">Всего новых слов: <span class=\"total-new-words\">0</span></p>\r\n            </li>\r\n            <li>\r\n              <p class=\"text-statistic\">Изученных слов: <span class=\"learned-words-stat\">0</span></p>\r\n            </li>\r\n            <li>\r\n              <p class=\"text-statistic\">Процент правильных ответов: <span class=\"percent-correct-answer\">0%</span></p>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    `;\r\n        const root = document.createElement('div');\r\n        root.classList.add('wrapper');\r\n        root.innerHTML = html;\r\n        document.body.appendChild(root);\r\n    }\r\n}\r\nexport default RenderView;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(607);\n"],"names":["webpackThen","webpackExports","webpackError","completeQueue","completeFunction","queueFunction","preloaderApp","render","listenerAll","upHeader","startAllListenerGames","api","constructor","word","wordTranslate","audio","image","this","main","document","querySelector","createRoundGameAudio","innerHTML","page","insertAdjacentHTML","createCorrectAnswer","boxCorrectAnswer","blockAnswer","startGameSprint","createRoundGameSprint","questionBox","blockQuestion","audioLevelUp","Audio","async","selectGame","Object","values","getDifficultWordsSignupUser","map","item","paginatedResults","flat","group","getTextbookWords","count","newGameSprint","storeUser","storeGeneral","groupWords","newGroupWords","pageWords","newPageWords","getGameTextbookWordsSignupUser","missingElements","newStoreGeneral","length","slice","getRandomArrAnswerSprint","sort","Math","random","factorPointsGameSprint","countCorrectAnswerInRowSprint","qualityPoints","src","volume","points","Number","textContent","play","plusPointsInTotalScoreSprint","totalScores","total","resetPaginationGameSprint","paginationItem","querySelectorAll","forEach","style","background","newGameAudio","getRandom","min","max","floor","getRandomArrAnswer","currentWord","selectCorrectId","gameAudio","gameSprint","countGame","dataRound","storage","correctIdWord","undefined","_id","id","getGamesWordsFromDifficultyPage","getGamesWordsTextbookSignupUser","getGamesWords","getGamesWordsSprintTextbookSignupUser","getGameSprintWords","wordID","response","saveResponseGameWordInStore","actionOnTrueRequestCorrectResult","error","actionOnFalseRequestCorrectResult","actionOnTrueRequestWrongResult","actionOnFalseRequestWrongResult","createResultTrueAnswer","trueAnswerGame","blockCorrect","dataAtrAudio","correctAnswer","div","createElement","classList","add","span","setAttribute","append","span2","createResultFalseAnswer","falseAnswerGame","blockWrong","wrongAnswer","wordId","getGameWord","gamesAnswer","optional","difficultyWord","difficulty","responseData","wrong","updateGameWords","correct","createGameWords","differenceAnswer","linkGameAudio","linkGameSprint","footer","wrapper","menuBurg","logoLinkHome","numberWrong","numberCorrect","buttonExitPopupGame","btnExitPopupGameFromTextbook","buttonRepeatPopupGame","btnRepeatPopupGameFromTextbook","popupResultGame","popupBlockCorrect","popupBlockWrong","linkTextbook","header","resultGameSprint","audioCorrect","audioWrong","interval","clearInterval","cancelAllRoundsGame","playAudioResultGameAudio","exitPopupGame","exitPopupGameFromTextbook","repeatPopupGameAudio","repeatPopupGameFromTextbook","timer","time","timeRound","setInterval","cancelRoundGameSprint","startRoundGameSprint","currentWordTranslate","selectAnswerGameSprint","exitRoundGame","installPathsAndVolumeAudio","saveInDataBaseResultWrongGames","saveDataRoundInStoreGameRound","saveInDataBaseResultCorrectGames","addEventListener","event","element","target","contains","actionOnWrongAnswerSprint","actionOnCorrectAnswerSprint","showGameSprint","renderGameSprint","backgroundImage","remove","selectionLevelGame","clickStartButton","exitGames","showGameSprintFromTextbook","renderGameSprintFromTextbook","goToGameSprint","localStorage","setItem","JSON","stringify","hideShowToggleBtnPopupGame","click","goToGameSprintFromPageTextbook","selectRequestGameSprint","display","showGameAudio","renderGameAudioCall","showGameAudioFromTextbook","renderGameAudioCallFromTextbook","goToGameAudio","goToGameAudioFromPageTextbook","selectRequestGameAudio","createBtnAnswer","arrAnswer","blockAnswerGame","index","button","startRoundGameAudio","playAudioGameAudio","answerBtnNotKnow","selectAnswer","checkDisabledAnswer","disabled","hideShowBtnWhenAnswer","btnNotKnow","iconMute","btnNext","actionOnWrongAnswer","String","keys","saveStatisticInDataBase","pressBtnNext","btnAnswerItem","playAudioAnswerGameAudio","actionOnCorrectAnswer","transitionTextbook","fullscreenRoundGame","fullscreenElement","exitFullscreen","documentElement","requestFullscreen","currentLevelGame","dataset","blockLevelsGame","btnStart","getGamesWordsSprint","keyDownHandler","firstElementChild","className","code","preventDefault","currentAudio","source","iconAudioGame","rebootPage","window","getItem","updateStorageGeneralInfo","utils","statistic","AppController","super","arguments","signIn","popupSignIn","popupAbout","popupStatistic","menuHeader","subMenuList","subMenuLink","linkToRegistered","linkToSignup","formPopapRegistered","formPopapSignup","formCloseBtn","aboutCloseBtn","statisticCloseBtn","messageError","messageErrorSignin","logOutBox","logOutBtn","linkHome","linkTeam","linkStatistic","paginationTextbook","wrapperCardWords","menuListItemDifficulty","showMenu","toggle","renderTextbook","getCardsWordsSignupUser","getCardsWords","getPaginationCards","toggleDisableArrowPagination","showHideBtnDifficulty","showHideSectionDifficulty","isAllLearnedWordAndDifficulty","activeLevelWords","addWordDifficult","addLearnedWords","transitionFromTextbookToHardWords","renderDifficultyPage","getAllDifficultyCardsWords","transitionFromHardWordsToTextbook","goToLearnedWordsPage","removeClassActiveFromMain","listenerGamesStart","goToTextbook","outputTextbook","goToDifficultWordsPage","outputDifficultWordPage","showHideBtnIconInfoStat","linkStudyWord","gamesBlock","disabledLinkFromDifficultPage","getAllLearnedCardsWords","returnDifficultPageFromLearnedPage","isEmptyDifficultyWords","deleteWordLearned","backToDifficult","deleteWordDifficult","hideBlockGame","navigationPageWords","outputWordsAndPagination","currentPage","currentGroup","elementCard","parentNode","elementButtonEasy","nextElementSibling","idword","getWord","updateWordsDifficulty","createWordsDifficulty","elementButtonHard","previousElementSibling","playAudioExample","playNum","paused","pause","currentTime","arrAudio","playNext","newPlayNum","showHideLearningProgress","messageElement","goToHome","renderHomePage","goToInfoProject","showSubMenu","hideMenuClickBody","showRegisteredForm","showSigninForm","closeFormRegist","openFormRegist","showHideTeamPage","hideStatistic","goToStatistic","showPersonalAccount","logOutUser","notSignupUser","conditionLoadWords","clear","registeredUser","newUser","name","nameUser","value","email","password","createUser","loginUser","renderLogOut","getStatisticAfterReloadPage","signupUser","getNewUserToken","getUser","loginAccountUser","updateStorageUserInfo","getLocalStorage","getRefreshToken","storeUserInfo","message","refreshToken","token","userId","isSignupUser","levelGame","storeGameRound","arrAnswerGameAudio","arrAnswerGameSprint","longSeriesAnswer","countPaginationSprint","learnWordsInGames","isClearDailyStat","randomWord","optionalAudioCall","optionalSprint","dailyStat","date","Date","toLocaleDateString","games","newWords","percentCorrect","longSeries","sprint","totalNewWords","learnedWordsDaily","percentAllCorrect","allWordsDaily","wordsList","allWordsList","parse","trackScroll","goTopBtn","scrolled","pageYOffset","coords","clientHeight","backToTop","timeOut","body","scrollTop","scrollBy","setTimeout","clearTimeout","preloader","showPreloaderPage","hidePreloaderPage","saveStatisticStorage","dataResponse","newDailyStat","uniqueNewWords","Set","recordNewWordsGamesInStatistic","reduce","includes","updateDataStatisticGames","totalWordsAudio","round","totalWordsSprint","updateDataStatistic","totalAnswer","totalCurrentAnswerAll","renderStatisticInPage","totalSprintWords","percentAnswerSprint","longSeriesSprint","totalAudioWords","percentAnswerAudio","longSeriesAudio","learnedWordsStat","percentCorrectAnswer","getStatistic","updateStatistic","transcription","textMeaning","textMeaningTranslate","textExample","textExampleTranslate","userWord","wrapperCardWordsDifficult","createAndRenderCards","card","createAndRenderCardsDifficulty","renderCardsDifficultyPage","createAndRenderCardsLearned","renderCardsLearnedPage","preloaderPage","getTextbookWordsSignupUser","el","createCards","getLearnedWordsSignupUser","allPageWords","parentElement","current","all","renderNumberPage","pageNum","renderLinkPagination","renderDotsPagination","renderPagination","links","i","push","uniqLinks","a","b","nextArrow","prevArrow","firstChild","blockMessageEmpty","cardWords","btnPagination","gameCard","removeAttribute","blockBtnDifficulty","iconInfoStat","difficultWords","base","users","signin","words","user","fetch","method","headers","status","json","content","ok","levelWord","learnedWords","assign","renderLevelsWords","selectionRenderPage","html","root","appendChild","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","Symbol","queue","fn","r","hasAwait","currentDeps","outerResolve","reject","isEvaluating","nested","whenAll","deps","onResolve","onReject","dep","promise","Promise","resolve","rej","rejectFn","then","obj","e","ret","wrapDeps","getResult","d","err","definition","key","o","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call"],"sourceRoot":""}